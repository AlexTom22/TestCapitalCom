{"uid":"238b89bf76c0d0e3","name":"TC_05.02 with parameters: NoReg, , FCA","fullName":"tests.Learn.us_05.us_05_learn_glossary_2_test.TestGlossaryItems#test_05_02_header_button_trade_now","historyId":"7f0dcd95e6d0bfe7db8b07783a99bcff","time":{"start":1677766341826,"stop":1677766357033,"duration":15207},"description":"\n        Check: Header -> button [Trade Now]\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Header -&gt; button [Trade Now]\n    Language: All. License: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=110.0.5481.177)\nStacktrace:\n#0 0x563f2cf61d93 <unknown>\n#1 0x563f2cd3015d <unknown>\n#2 0x563f2cd6dd3c <unknown>\n#3 0x563f2cd61ff5 <unknown>\n#4 0x563f2cd905f2 <unknown>\n#5 0x563f2cd61873 <unknown>\n#6 0x563f2cd9081e <unknown>\n#7 0x563f2cda8619 <unknown>\n#8 0x563f2cd90353 <unknown>\n#9 0x563f2cd5fe40 <unknown>\n#10 0x563f2cd61038 <unknown>\n#11 0x563f2cfb58be <unknown>\n#12 0x563f2cfb98f0 <unknown>\n#13 0x563f2cf99f90 <unknown>\n#14 0x563f2cfbab7d <unknown>\n#15 0x563f2cf8b578 <unknown>\n#16 0x563f2cfdf348 <unknown>\n#17 0x563f2cfdf4d6 <unknown>\n#18 0x563f2cff9341 <unknown>\n#19 0x7fb68d28cb43 <unknown>","statusTrace":"self = <us_05_learn_glossary_2_test.TestGlossaryItems object at 0x7fb03654fc40>\nworker_id = 'gw1'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f47e27d8c37e39e2c5d86c5b7bd21f3f\")>\ncur_login = 'Empty', cur_password = 'Empty', cur_language = ''\ncur_license = 'FCA', cur_role = 'NoReg', prob_run_tc = ''\ncur_item_link = 'https://capital.com/chicago-mercantile-exchange-definition'\n\n    @allure.feature(\"TS_05 | Test menu [Learn to Trade] / [Glossary] / [item]\")\n    @allure.story(\"TC_05.02 | Testing 'Trade Now' button on the header page\")\n    @allure.step(\"Start test button 'Trade Now' on header\")\n    @allure.title(\"TC_05.02 with parameters: {cur_role}, {cur_language}, {cur_license}\")\n    def test_05_02_header_button_trade_now(\n            self, worker_id, d, cur_login, cur_password, cur_language, cur_license, cur_role,\n            prob_run_tc, cur_item_link\n    ):\n        \"\"\"\n        Check: Header -> button [Trade Now]\n        Language: All. License: All.\n        \"\"\"\n        print(f\"worker_id = {worker_id}\")\n    \n        if prob_run_tc != \"\":\n            pytest.skip(f\"{prob_run_tc}   {self.datetime_now()}\")\n    \n        page5 = Conditions(d, \"\")\n        page5.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_login, cur_password, cur_role, cur_language, cur_license\n        )\n    \n        if cur_role == \"NoReg\":\n            page5 = Header(d, cur_item_link)\n            if not page5.current_page_is(cur_item_link):\n                page5.open_page()\n    \n>           if page5.header_button_signup_click():\n\ntests/Learn/us_05/us_05_learn_glossary_2_test.py:141: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Header/header.py:25: in header_button_signup_click\n    button.click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:403: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb033583460>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x563f2cfdf4d6 \\\\u003Cunknown>\\\\n#18 0x563f2cff9341 \\\\u003Cunknown>\\\\n#19 0x7fb68d28cb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=110.0.5481.177)\nE       Stacktrace:\nE       #0 0x563f2cf61d93 <unknown>\nE       #1 0x563f2cd3015d <unknown>\nE       #2 0x563f2cd6dd3c <unknown>\nE       #3 0x563f2cd61ff5 <unknown>\nE       #4 0x563f2cd905f2 <unknown>\nE       #5 0x563f2cd61873 <unknown>\nE       #6 0x563f2cd9081e <unknown>\nE       #7 0x563f2cda8619 <unknown>\nE       #8 0x563f2cd90353 <unknown>\nE       #9 0x563f2cd5fe40 <unknown>\nE       #10 0x563f2cd61038 <unknown>\nE       #11 0x563f2cfb58be <unknown>\nE       #12 0x563f2cfb98f0 <unknown>\nE       #13 0x563f2cf99f90 <unknown>\nE       #14 0x563f2cfbab7d <unknown>\nE       #15 0x563f2cf8b578 <unknown>\nE       #16 0x563f2cfdf348 <unknown>\nE       #17 0x563f2cfdf4d6 <unknown>\nE       #18 0x563f2cff9341 <unknown>\nE       #19 0x7fb68d28cb43 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"worker_id","time":{"start":1677763503192,"stop":1677763503193,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1677763503193,"stop":1677763503193,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"d","time":{"start":1677763503193,"stop":1677763505578,"duration":2385},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"go","time":{"start":1677763505579,"stop":1677763505579,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"prob_run_tc","time":{"start":1677763505579,"stop":1677763505580,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_language","time":{"start":1677763505579,"stop":1677763505579,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_role","time":{"start":1677763505579,"stop":1677763505579,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_license","time":{"start":1677763505579,"stop":1677763505579,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        Check: Header -> button [Trade Now]\n        Language: All. License: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=110.0.5481.177)\nStacktrace:\n#0 0x563f2cf61d93 <unknown>\n#1 0x563f2cd3015d <unknown>\n#2 0x563f2cd6dd3c <unknown>\n#3 0x563f2cd61ff5 <unknown>\n#4 0x563f2cd905f2 <unknown>\n#5 0x563f2cd61873 <unknown>\n#6 0x563f2cd9081e <unknown>\n#7 0x563f2cda8619 <unknown>\n#8 0x563f2cd90353 <unknown>\n#9 0x563f2cd5fe40 <unknown>\n#10 0x563f2cd61038 <unknown>\n#11 0x563f2cfb58be <unknown>\n#12 0x563f2cfb98f0 <unknown>\n#13 0x563f2cf99f90 <unknown>\n#14 0x563f2cfbab7d <unknown>\n#15 0x563f2cf8b578 <unknown>\n#16 0x563f2cfdf348 <unknown>\n#17 0x563f2cfdf4d6 <unknown>\n#18 0x563f2cff9341 <unknown>\n#19 0x7fb68d28cb43 <unknown>","statusTrace":"self = <us_05_learn_glossary_2_test.TestGlossaryItems object at 0x7fb03654fc40>\nworker_id = 'gw1'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f47e27d8c37e39e2c5d86c5b7bd21f3f\")>\ncur_login = 'Empty', cur_password = 'Empty', cur_language = ''\ncur_license = 'FCA', cur_role = 'NoReg', prob_run_tc = ''\ncur_item_link = 'https://capital.com/chicago-mercantile-exchange-definition'\n\n    @allure.feature(\"TS_05 | Test menu [Learn to Trade] / [Glossary] / [item]\")\n    @allure.story(\"TC_05.02 | Testing 'Trade Now' button on the header page\")\n    @allure.step(\"Start test button 'Trade Now' on header\")\n    @allure.title(\"TC_05.02 with parameters: {cur_role}, {cur_language}, {cur_license}\")\n    def test_05_02_header_button_trade_now(\n            self, worker_id, d, cur_login, cur_password, cur_language, cur_license, cur_role,\n            prob_run_tc, cur_item_link\n    ):\n        \"\"\"\n        Check: Header -> button [Trade Now]\n        Language: All. License: All.\n        \"\"\"\n        print(f\"worker_id = {worker_id}\")\n    \n        if prob_run_tc != \"\":\n            pytest.skip(f\"{prob_run_tc}   {self.datetime_now()}\")\n    \n        page5 = Conditions(d, \"\")\n        page5.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_login, cur_password, cur_role, cur_language, cur_license\n        )\n    \n        if cur_role == \"NoReg\":\n            page5 = Header(d, cur_item_link)\n            if not page5.current_page_is(cur_item_link):\n                page5.open_page()\n    \n>           if page5.header_button_signup_click():\n\ntests/Learn/us_05/us_05_learn_glossary_2_test.py:141: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Header/header.py:25: in header_button_signup_click\n    button.click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:403: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb033583460>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x563f2cfdf4d6 \\\\u003Cunknown>\\\\n#18 0x563f2cff9341 \\\\u003Cunknown>\\\\n#19 0x7fb68d28cb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=110.0.5481.177)\nE       Stacktrace:\nE       #0 0x563f2cf61d93 <unknown>\nE       #1 0x563f2cd3015d <unknown>\nE       #2 0x563f2cd6dd3c <unknown>\nE       #3 0x563f2cd61ff5 <unknown>\nE       #4 0x563f2cd905f2 <unknown>\nE       #5 0x563f2cd61873 <unknown>\nE       #6 0x563f2cd9081e <unknown>\nE       #7 0x563f2cda8619 <unknown>\nE       #8 0x563f2cd90353 <unknown>\nE       #9 0x563f2cd5fe40 <unknown>\nE       #10 0x563f2cd61038 <unknown>\nE       #11 0x563f2cfb58be <unknown>\nE       #12 0x563f2cfb98f0 <unknown>\nE       #13 0x563f2cf99f90 <unknown>\nE       #14 0x563f2cfbab7d <unknown>\nE       #15 0x563f2cf8b578 <unknown>\nE       #16 0x563f2cfdf348 <unknown>\nE       #17 0x563f2cfdf4d6 <unknown>\nE       #18 0x563f2cff9341 <unknown>\nE       #19 0x7fb68d28cb43 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","steps":[{"name":"Start test button 'Trade Now' on header","time":{"start":1677766341826,"stop":1677766357033,"duration":15207},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=110.0.5481.177)\nStacktrace:\n#0 0x563f2cf61d93 <unknown>\n#1 0x563f2cd3015d <unknown>\n#2 0x563f2cd6dd3c <unknown>\n#3 0x563f2cd61ff5 <unknown>\n#4 0x563f2cd905f2 <unknown>\n#5 0x563f2cd61873 <unknown>\n#6 0x563f2cd9081e <unknown>\n#7 0x563f2cda8619 <unknown>\n#8 0x563f2cd90353 <unknown>\n#9 0x563f2cd5fe40 <unknown>\n#10 0x563f2cd61038 <unknown>\n#11 0x563f2cfb58be <unknown>\n#12 0x563f2cfb98f0 <unknown>\n#13 0x563f2cf99f90 <unknown>\n#14 0x563f2cfbab7d <unknown>\n#15 0x563f2cf8b578 <unknown>\n#16 0x563f2cfdf348 <unknown>\n#17 0x563f2cfdf4d6 <unknown>\n#18 0x563f2cff9341 <unknown>\n#19 0x7fb68d28cb43 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/TestCapitalCom/TestCapitalCom/tests/Learn/us_05/us_05_learn_glossary_2_test.py\", line 141, in test_05_02_header_button_trade_now\n    if page5.header_button_signup_click():\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/TestCapitalCom/TestCapitalCom/pages/Header/header.py\", line 25, in header_button_signup_click\n    button.click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 403, in _execute\n    return self._parent.execute(command, params)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Set preconditions","time":{"start":1677766341826,"stop":1677766341826,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f47e27d8c37e39e2c5d86c5b7bd21f3f\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"login","value":"'Empty'"},{"name":"password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_language","value":"''"},{"name":"cur_license","value":"'FCA'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"2023-03-02 13:24:51.363608.   Click 'Trade Now' button.","time":{"start":1677766341829,"stop":1677766357032,"duration":15203},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=110.0.5481.177)\nStacktrace:\n#0 0x563f2cf61d93 <unknown>\n#1 0x563f2cd3015d <unknown>\n#2 0x563f2cd6dd3c <unknown>\n#3 0x563f2cd61ff5 <unknown>\n#4 0x563f2cd905f2 <unknown>\n#5 0x563f2cd61873 <unknown>\n#6 0x563f2cd9081e <unknown>\n#7 0x563f2cda8619 <unknown>\n#8 0x563f2cd90353 <unknown>\n#9 0x563f2cd5fe40 <unknown>\n#10 0x563f2cd61038 <unknown>\n#11 0x563f2cfb58be <unknown>\n#12 0x563f2cfb98f0 <unknown>\n#13 0x563f2cf99f90 <unknown>\n#14 0x563f2cfbab7d <unknown>\n#15 0x563f2cf8b578 <unknown>\n#16 0x563f2cfdf348 <unknown>\n#17 0x563f2cfdf4d6 <unknown>\n#18 0x563f2cff9341 <unknown>\n#19 0x7fb68d28cb43 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/TestCapitalCom/TestCapitalCom/pages/Header/header.py\", line 25, in header_button_signup_click\n    button.click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 403, in _execute\n    return self._parent.execute(command, params)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[{"name":"worker_id","value":"'gw1'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f47e27d8c37e39e2c5d86c5b7bd21f3f\")>"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_language","value":"''"},{"name":"cur_license","value":"'FCA'"},{"name":"cur_role","value":"'NoReg'"},{"name":"prob_run_tc","value":"''"},{"name":"cur_item_link","value":"'https://capital.com/chicago-mercantile-exchange-definition'"}],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"c9a4c8ecc321bffd","name":"Screeshot","source":"c9a4c8ecc321bffd.png","type":"image/png","size":1052012},{"uid":"bdac348101545d0f","name":"log","source":"bdac348101545d0f.txt","type":"text/plain","size":761},{"uid":"7c0d400c9c01ba78","name":"stdout","source":"7c0d400c9c01ba78.txt","type":"text/plain","size":16}],"parameters":[],"stepsCount":3,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"go::0","time":{"start":1677774294489,"stop":1677774294687,"duration":198},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"TS_05 | Test menu [Learn to Trade] / [Glossary] / [item]"},{"name":"story","value":"TC_05.02 | Testing 'Trade Now' button on the header page"},{"name":"epic","value":"US_05. Testing Glossary Item page in \"Learn to trade\" menu. All language. All license"},{"name":"tag","value":"us_05"},{"name":"parentSuite","value":"tests.Learn.us_05"},{"name":"suite","value":"us_05_learn_glossary_2_test"},{"name":"subSuite","value":"TestGlossaryItems"},{"name":"host","value":"fv-az365-192"},{"name":"thread","value":"2879-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.Learn.us_05.us_05_learn_glossary_2_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_item_link","value":"'https://capital.com/chicago-mercantile-exchange-definition'"},{"name":"cur_language","value":"''"},{"name":"cur_license","value":"'FCA'"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"go","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["us_05"]},"source":"238b89bf76c0d0e3.json","parameterValues":["'https://capital.com/chicago-mercantile-exchange-definition'","''","'FCA'","'Empty'","'Empty'","'NoReg'","'chrome'"]}