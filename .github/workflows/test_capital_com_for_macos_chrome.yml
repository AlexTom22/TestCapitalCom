name: Test CapitalCom. Env. - macOS/chrome
on:
#   push:
  workflow_dispatch:
#   schedule:
#     - cron: '30 23 * * 4'

jobs:
  tests:
    name: I. Building environment and testing the capital.com website
    runs-on: macos-latest
    steps:
      - name: 1. Check out this repo
        uses: actions/checkout@v3
        continue-on-error: true
#         with:
#           ref: gh-pages
#           path: gh-pages

      - name: 2.1. Install Python
        if: always()
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 3.1. Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      
      - name: 3.3. Install Neofetch
        if: always()
        run: brew install neofetch

      - name: 4. install Poetry
        if: always()
        run: pip3 install poetry

      - name: 5. install dependencies
        if: always()
        run: poetry update

      - name: 6. Run hwinfo.py
        run: poetry run python3 tests/hwinfo.py

      - name: 7. Run pytest
        if: always()
#        run: poetry run pytest -n auto tests/Learn/us_05/us_05_learn_glossary_1_test.py
        run: poetry run pytest -n auto tests/Learn/us_05/us_05_learn_glossary_2_test.py
        continue-on-error: true

      - name: 8. Upload artifact "allure-results"
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results/
          retention-days: 7

#       - name: 8. Save cache
#         uses: actions/cache/save@v3
#         id: cache
#         if: always()
#         with:
#           path: allure_results
#           key: allure_results-${{ hashFiles('pyproject.toml') }}

  generate_report:
    name: II. Generate & Deploy Allure report and Send telegram message
    runs-on: ubuntu-latest
    if: always()
    needs: [ tests ]
    steps:
      - name: 1. Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: 2. Download Artifacts
        uses: actions/download-artifact@v3
        id: download
        with:
          name: allure-results
          path: allure-results

#       - name: 2. Restore cache
#         uses: actions/cache/restore@v3
#         id: restore-cache
#         with:
#           key: allure_results-${{ hashFiles('pyproject.toml') }}
#
      - name: 3. Generate allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          allure_report: allure-report
          gh_pages: gh-pages
          allure_history: allure-history
          ref: gh-pages
          path: gh-pages
          keep_reports: 7

      - name: 4. Deploy allure_report to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          publish_dir: ./allure-history

      - name: 5. Get access to github repository
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: 6. Send telegram message on push
        uses: appleboy/telegram-action@master
        if: always()
        with:
          to: ${{ secrets.TELEGRAM_TO_ALEXTOM22 }}
#           to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
#           disable_web_page_preview: true
          message: |
            Message from Github CI Actions

            Testing of the "Capital.com" web application in the "MacOS/Chrome" environment is completed!

            See allure-result testing: https://${{ github.actor }}.github.io/TestCapitalCom/
#             Tests Repository: https://github.com/${{ github.repository }}
