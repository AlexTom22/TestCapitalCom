name: Testing Capital.com and deploy test results. Env. MacOS, Safary
on:
  workflow_dispatch:
#   schedule:
#     - cron: '00 12 * * 5'

jobs:
  tests:
    name: Bild environment & Test & Upload artifacts
    runs-on: macos-latest
    steps:
      - name: 1. Check out this repo
        uses: actions/checkout@v3

      - name: 2. install Python
        if: always()
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 3. install Poetry
        if: always()
        run: pip install poetry

      - name: 4. install dependencies
        if: always()
        run: poetry update

      - name: 5. Run hwinfo.py
        run: poetry run python3 tests/hwinfo.py > tests/hwinfo.txt

      - name: 6. Run pytest
        if: always()
        run: poetry run pytest -v
        continue-on-error: true

      - name: 7. Upload artifact "results"
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: report/

      - name: 8. Upload artifact "allure-results"
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results/
          retention-days: 10

      - name: 9. Upload artifact "hwinfo.txt"
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: hwinfo.txt
          path: tests/hwinfo.txt


  generate_report:
    name: Generate & Deploy Allure report
    runs-on: ubuntu-latest
    if: always()
    needs: [ tests ]
    steps:
      - name: 1. Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: 2. Download Artifacts
        uses: actions/download-artifact@v3
        id: download
        with:
          name: allure-results
          path: allure-results

      - name: 3. Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          allure_report: allure-report
          allure_history: allure-history
          gh_pages: gh-pages
          ref: gh-pages
          path: gh-pages
          keep_reports: 15

      - name: 4. Deploy allure_report to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          publish_dir: ./allure-history

      - name: 5. Archive code coverage results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure_report
          path: allure_report/

  send_message:
    name: 1. Send massage to Telegram about the end of process
    runs-on: ubuntu-latest
    if: always()
    needs: [ generate_report ]
    steps:
      - name: 1. Get access to github repository
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: 2. Download Artifacts "hwinfo.txt"
        uses: actions/download-artifact@v3
        id: download
        with:
          name: hwinfo.txt
          path: tests/

      - name: 3. Send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          disable_web_page_preview: true
          document: tests/hwinfo.txt
          message: |
            Message from ${{ github.actor }}

            Testing of the web application "Capital.com" in the "MacOS-11/Safari-latest" environment is completed!

            See allure-result testing: https://${{ github.actor }}.github.io/TestCapitalCom/

            Tests Repository: https://github.com/${{ github.repository }}

#       - name: 2. Send message hwinfo.txt file
#         uses: appleboy/telegram-action@master
#         with:
#           to: ${{ secrets.TELEGRAM_TO }}
#           token: ${{ secrets.TELEGRAM_TOKEN }}
#           message_file: tests/hwinfo.txt
#
