{"uid":"e6854cc3583d68d0","name":"test_08_02_widget_trading_instrument[chrome-NoReg-zh-CCSTV-Empty-Empty]","fullName":"tests.capital_page_test.Tests#test_08_02_widget_trading_instrument","historyId":"f1767f8ca8da995c92533ac79903111f","time":{"start":1673872963166,"stop":1673872968352,"duration":5186},"description":"\n        Check: widget \"Trading instrument\"\n        Language: All. Licence: All.\n        Widgen has 2 layouts\n        ","descriptionHtml":"<pre><code>    Check: widget &quot;Trading instrument&quot;\n    Language: All. Licence: All.\n    Widgen has 2 layouts\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=108.0.5359.124)\nStacktrace:\n#0 0x55a8f3ff82a3 <unknown>\n#1 0x55a8f3db6dfd <unknown>\n#2 0x55a8f3df49fc <unknown>\n#3 0x55a8f3de8dc5 <unknown>\n#4 0x55a8f3e13b32 <unknown>\n#5 0x55a8f3de861f <unknown>\n#6 0x55a8f3e13cfe <unknown>\n#7 0x55a8f3e2b47c <unknown>\n#8 0x55a8f3e13903 <unknown>\n#9 0x55a8f3de6ece <unknown>\n#10 0x55a8f3de7fde <unknown>\n#11 0x55a8f404863e <unknown>\n#12 0x55a8f404bb79 <unknown>\n#13 0x55a8f402e89e <unknown>\n#14 0x55a8f404ca83 <unknown>\n#15 0x55a8f4021505 <unknown>\n#16 0x55a8f406dca8 <unknown>\n#17 0x55a8f406de36 <unknown>\n#18 0x55a8f4089333 <unknown>\n#19 0x7fda6bf4eb43 <unknown>","statusTrace":"self = <tests.capital_page_test.Tests object at 0x7fe42c1b7c40>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4536cf7f80e5209194342ddc3a6a28b2\")>\ncur_login = 'Empty', cur_password = 'Empty', cur_role = 'NoReg'\ncur_language = 'zh', cur_license = 'CCSTV'\n\n    @allure.feature(\"F_08 | Widget [Trading instrument]\")\n    @allure.story(\"S_08.02 | Widget [Trading instrument] tab [Commodities] button [Trade]\")\n    @allure.step(f\"{datetime.datetime.now()}.   \"\n                 f\"Start test 'Click 'Trade' buttons on the 'Commodities' tab 'Trading instrument' widget'.\")\n    def test_08_02_widget_trading_instrument(\n        self, worker_id, d, cur_login, cur_password, cur_role, cur_language, cur_license\n    ):\n        \"\"\"\n        Check: widget \"Trading instrument\"\n        Language: All. Licence: All.\n        Widgen has 2 layouts\n        \"\"\"\n        global test_link\n        global page\n    \n        tab_name = \"Commodities\"\n        print(f\"worker_id = {worker_id}\")\n    \n        if not (cur_license == \"FCA\" and tab_name == \"Cryptocurrencies\"):\n            self.preconditions(d, cur_login, cur_password, cur_role, cur_language, cur_license)\n    \n            page = CapitalPage(d, test_link)\n            if not page.current_page_is(test_link):\n                page.open_page()\n                print(f\"{datetime.datetime.now()}   Load page: {test_link}\")\n    \n            layout = page.what_is_the_current_layout(cur_language)\n            page.widget_trading_instrument_cur_tab_click(cur_language, layout, tab_name)\n            list_buttons = page.get_list_lines_cur_tab(cur_language, layout, tab_name)\n    \n            for line in range(len(list_buttons)):\n                page = CapitalPage(d, test_link)\n>               page.selected_tab_and_line_button_trade_click(list_buttons, line)\n\ntests/capital_page_test.py:857: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/capital_com/capital_page.py:253: in selected_tab_and_line_button_trade_click\n    list_buttons[y].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe42c1b7bb0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55a8f406de36 \\\\u003Cunknown>\\\\n#18 0x55a8f4089333 \\\\u003Cunknown>\\\\n#19 0x7fda6bf4eb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=108.0.5359.124)\nE       Stacktrace:\nE       #0 0x55a8f3ff82a3 <unknown>\nE       #1 0x55a8f3db6dfd <unknown>\nE       #2 0x55a8f3df49fc <unknown>\nE       #3 0x55a8f3de8dc5 <unknown>\nE       #4 0x55a8f3e13b32 <unknown>\nE       #5 0x55a8f3de861f <unknown>\nE       #6 0x55a8f3e13cfe <unknown>\nE       #7 0x55a8f3e2b47c <unknown>\nE       #8 0x55a8f3e13903 <unknown>\nE       #9 0x55a8f3de6ece <unknown>\nE       #10 0x55a8f3de7fde <unknown>\nE       #11 0x55a8f404863e <unknown>\nE       #12 0x55a8f404bb79 <unknown>\nE       #13 0x55a8f402e89e <unknown>\nE       #14 0x55a8f404ca83 <unknown>\nE       #15 0x55a8f4021505 <unknown>\nE       #16 0x55a8f406dca8 <unknown>\nE       #17 0x55a8f406de36 <unknown>\nE       #18 0x55a8f4089333 <unknown>\nE       #19 0x7fda6bf4eb43 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"worker_id","time":{"start":1673872654230,"stop":1673872654231,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1673872654231,"stop":1673872654231,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"d","time":{"start":1673872654231,"stop":1673872657608,"duration":3377},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"go","time":{"start":1673872657608,"stop":1673872657608,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_role","time":{"start":1673872657609,"stop":1673872657609,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_language","time":{"start":1673872952435,"stop":1673872952435,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_license","time":{"start":1673872952436,"stop":1673872952436,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        Check: widget \"Trading instrument\"\n        Language: All. Licence: All.\n        Widgen has 2 layouts\n        ","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=108.0.5359.124)\nStacktrace:\n#0 0x55a8f3ff82a3 <unknown>\n#1 0x55a8f3db6dfd <unknown>\n#2 0x55a8f3df49fc <unknown>\n#3 0x55a8f3de8dc5 <unknown>\n#4 0x55a8f3e13b32 <unknown>\n#5 0x55a8f3de861f <unknown>\n#6 0x55a8f3e13cfe <unknown>\n#7 0x55a8f3e2b47c <unknown>\n#8 0x55a8f3e13903 <unknown>\n#9 0x55a8f3de6ece <unknown>\n#10 0x55a8f3de7fde <unknown>\n#11 0x55a8f404863e <unknown>\n#12 0x55a8f404bb79 <unknown>\n#13 0x55a8f402e89e <unknown>\n#14 0x55a8f404ca83 <unknown>\n#15 0x55a8f4021505 <unknown>\n#16 0x55a8f406dca8 <unknown>\n#17 0x55a8f406de36 <unknown>\n#18 0x55a8f4089333 <unknown>\n#19 0x7fda6bf4eb43 <unknown>","statusTrace":"self = <tests.capital_page_test.Tests object at 0x7fe42c1b7c40>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4536cf7f80e5209194342ddc3a6a28b2\")>\ncur_login = 'Empty', cur_password = 'Empty', cur_role = 'NoReg'\ncur_language = 'zh', cur_license = 'CCSTV'\n\n    @allure.feature(\"F_08 | Widget [Trading instrument]\")\n    @allure.story(\"S_08.02 | Widget [Trading instrument] tab [Commodities] button [Trade]\")\n    @allure.step(f\"{datetime.datetime.now()}.   \"\n                 f\"Start test 'Click 'Trade' buttons on the 'Commodities' tab 'Trading instrument' widget'.\")\n    def test_08_02_widget_trading_instrument(\n        self, worker_id, d, cur_login, cur_password, cur_role, cur_language, cur_license\n    ):\n        \"\"\"\n        Check: widget \"Trading instrument\"\n        Language: All. Licence: All.\n        Widgen has 2 layouts\n        \"\"\"\n        global test_link\n        global page\n    \n        tab_name = \"Commodities\"\n        print(f\"worker_id = {worker_id}\")\n    \n        if not (cur_license == \"FCA\" and tab_name == \"Cryptocurrencies\"):\n            self.preconditions(d, cur_login, cur_password, cur_role, cur_language, cur_license)\n    \n            page = CapitalPage(d, test_link)\n            if not page.current_page_is(test_link):\n                page.open_page()\n                print(f\"{datetime.datetime.now()}   Load page: {test_link}\")\n    \n            layout = page.what_is_the_current_layout(cur_language)\n            page.widget_trading_instrument_cur_tab_click(cur_language, layout, tab_name)\n            list_buttons = page.get_list_lines_cur_tab(cur_language, layout, tab_name)\n    \n            for line in range(len(list_buttons)):\n                page = CapitalPage(d, test_link)\n>               page.selected_tab_and_line_button_trade_click(list_buttons, line)\n\ntests/capital_page_test.py:857: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/capital_com/capital_page.py:253: in selected_tab_and_line_button_trade_click\n    list_buttons[y].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe42c1b7bb0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55a8f406de36 \\\\u003Cunknown>\\\\n#18 0x55a8f4089333 \\\\u003Cunknown>\\\\n#19 0x7fda6bf4eb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=108.0.5359.124)\nE       Stacktrace:\nE       #0 0x55a8f3ff82a3 <unknown>\nE       #1 0x55a8f3db6dfd <unknown>\nE       #2 0x55a8f3df49fc <unknown>\nE       #3 0x55a8f3de8dc5 <unknown>\nE       #4 0x55a8f3e13b32 <unknown>\nE       #5 0x55a8f3de861f <unknown>\nE       #6 0x55a8f3e13cfe <unknown>\nE       #7 0x55a8f3e2b47c <unknown>\nE       #8 0x55a8f3e13903 <unknown>\nE       #9 0x55a8f3de6ece <unknown>\nE       #10 0x55a8f3de7fde <unknown>\nE       #11 0x55a8f404863e <unknown>\nE       #12 0x55a8f404bb79 <unknown>\nE       #13 0x55a8f402e89e <unknown>\nE       #14 0x55a8f404ca83 <unknown>\nE       #15 0x55a8f4021505 <unknown>\nE       #16 0x55a8f406dca8 <unknown>\nE       #17 0x55a8f406de36 <unknown>\nE       #18 0x55a8f4089333 <unknown>\nE       #19 0x7fda6bf4eb43 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: ElementNotInteractableException","steps":[{"name":"2023-01-16 12:37:34.120904.   Start test 'Click 'Trade' buttons on the 'Commodities' tab 'Trading instrument' widget'.","time":{"start":1673872963166,"stop":1673872968352,"duration":5186},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=108.0.5359.124)\nStacktrace:\n#0 0x55a8f3ff82a3 <unknown>\n#1 0x55a8f3db6dfd <unknown>\n#2 0x55a8f3df49fc <unknown>\n#3 0x55a8f3de8dc5 <unknown>\n#4 0x55a8f3e13b32 <unknown>\n#5 0x55a8f3de861f <unknown>\n#6 0x55a8f3e13cfe <unknown>\n#7 0x55a8f3e2b47c <unknown>\n#8 0x55a8f3e13903 <unknown>\n#9 0x55a8f3de6ece <unknown>\n#10 0x55a8f3de7fde <unknown>\n#11 0x55a8f404863e <unknown>\n#12 0x55a8f404bb79 <unknown>\n#13 0x55a8f402e89e <unknown>\n#14 0x55a8f404ca83 <unknown>\n#15 0x55a8f4021505 <unknown>\n#16 0x55a8f406dca8 <unknown>\n#17 0x55a8f406de36 <unknown>\n#18 0x55a8f4089333 <unknown>\n#19 0x7fda6bf4eb43 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/TestCapitalCom/TestCapitalCom/tests/capital_page_test.py\", line 857, in test_08_02_widget_trading_instrument\n    page.selected_tab_and_line_button_trade_click(list_buttons, line)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/TestCapitalCom/TestCapitalCom/pages/capital_com/capital_page.py\", line 253, in selected_tab_and_line_button_trade_click\n    list_buttons[y].click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 410, in _execute\n    return self._parent.execute(command, params)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"2023-01-16 12:37:34.119911.   Set preconditions","time":{"start":1673872963166,"stop":1673872963166,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"4536cf7f80e5209194342ddc3a6a28b2\")>"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_language","value":"'zh'"},{"name":"cur_license","value":"'CCSTV'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"2023-01-16 12:37:34.118403.   What is the current layout Widget 'Trading instrument'?","time":{"start":1673872963170,"stop":1673872963176,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"language","value":"'zh'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"2023-01-16 12:37:34.118413.   Click tab ''Commodities'' on Widget 'Trading instrument' (layout: 2).","time":{"start":1673872963176,"stop":1673872963289,"duration":113},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"language","value":"'zh'"},{"name":"layout","value":"2"},{"name":"tab_name","value":"'Commodities'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"2023-01-16 12:37:34.118425.   Get list of lines with buttons in 'Commodities' tab. (Layout: 2).","time":{"start":1673872963290,"stop":1673872963306,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"language","value":"'zh'"},{"name":"layout","value":"2"},{"name":"tab_name","value":"'Commodities'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"2023-01-16 12:37:34.118435.   Click button 'Trade' on the '0' line selected tab.","time":{"start":1673872963306,"stop":1673872968352,"duration":5046},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=108.0.5359.124)\nStacktrace:\n#0 0x55a8f3ff82a3 <unknown>\n#1 0x55a8f3db6dfd <unknown>\n#2 0x55a8f3df49fc <unknown>\n#3 0x55a8f3de8dc5 <unknown>\n#4 0x55a8f3e13b32 <unknown>\n#5 0x55a8f3de861f <unknown>\n#6 0x55a8f3e13cfe <unknown>\n#7 0x55a8f3e2b47c <unknown>\n#8 0x55a8f3e13903 <unknown>\n#9 0x55a8f3de6ece <unknown>\n#10 0x55a8f3de7fde <unknown>\n#11 0x55a8f404863e <unknown>\n#12 0x55a8f404bb79 <unknown>\n#13 0x55a8f402e89e <unknown>\n#14 0x55a8f404ca83 <unknown>\n#15 0x55a8f4021505 <unknown>\n#16 0x55a8f406dca8 <unknown>\n#17 0x55a8f406de36 <unknown>\n#18 0x55a8f4089333 <unknown>\n#19 0x7fda6bf4eb43 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/TestCapitalCom/TestCapitalCom/pages/capital_com/capital_page.py\", line 253, in selected_tab_and_line_button_trade_click\n    list_buttons[y].click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 410, in _execute\n    return self._parent.execute(command, params)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"list_buttons","value":"[<selenium.webdriver.remote.webelement.WebElement (session=\"4536cf7f80e5209194342ddc3a6a28b2\", element=\"e245aab8-7b17-4eb7-a2e3-34cd6b7cd380\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"4536cf7f80e5209194342ddc3a6a28b2\", element=\"b0435d1e-4468-4a7a-97d8-0d14ddd76be0\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"4536cf7f80e5209194342ddc3a6a28b2\", element=\"02169cdf-875f-4e57-a675-a2dc6dbb5fe0\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"4536cf7f80e5209194342ddc3a6a28b2\", element=\"e3291fef-0283-49f4-95aa-c6fa58920a2d\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"4536cf7f80e5209194342ddc3a6a28b2\", element=\"fa697ac2-cdde-45b4-a6ba-953cba4e4b44\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"4536cf7f80e5209194342ddc3a6a28b2\", element=\"a926f0bb-19ac-41a1-8077-f810543bb8db\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"4536cf7f80e5209194342ddc3a6a28b2\", element=\"dc537d33-8edf-4277-973c-6158c5c77b47\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"4536cf7f80e5209194342ddc3a6a28b2\", element=\"d5b212aa-69cf-4eff-9270-c4706d7f5a07\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"4536cf7f80e5209194342ddc3a6a28b2\", element=\"bfc4359d-bace-4f2a-803d-95cb7927aaef\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"4536cf7f80e5209194342ddc3a6a28b2\", element=\"b0fa931b-9519-4b1c-bdaf-44bc8161aa5e\")>]"},{"name":"y","value":"0"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"4536cf7f80e5209194342ddc3a6a28b2\")>"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_language","value":"'zh'"},{"name":"cur_license","value":"'CCSTV'"}],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"ef5d6f0caa7870d6","name":"Screeshot","source":"ef5d6f0caa7870d6.png","type":"image/png","size":1872302},{"uid":"c9e77151a797f919","name":"stdout","source":"c9e77151a797f919.txt","type":"text/plain","size":37}],"parameters":[],"stepsCount":6,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"go::0","time":{"start":1673873060918,"stop":1673873061003,"duration":85},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"epic","value":"Testing capital.com. All language. All license"},{"name":"feature","value":"F_08 | Widget [Trading instrument]"},{"name":"story","value":"S_08.02 | Widget [Trading instrument] tab [Commodities] button [Trade]"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"capital_page_test"},{"name":"subSuite","value":"Tests"},{"name":"host","value":"fv-az180-492"},{"name":"thread","value":"2053-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.capital_page_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_language","value":"'zh'"},{"name":"cur_license","value":"'CCSTV'"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"go","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"e6854cc3583d68d0.json","parameterValues":["'zh'","'CCSTV'","'Empty'","'Empty'","'NoReg'","'chrome'"]}