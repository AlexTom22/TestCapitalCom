{"uid":"91d28add7715cbe4","name":"TC_02_01 with parameters: NoReg, cn, CCSTV.   2023-03-01 08:44:44.422512","fullName":"tests.Capital.us_01.us_01_capital_test.Test_US_01#test_02_01_header_button_trade_now","historyId":"0b9fc1ab5ab3c5b686c6f8a4594eed56","time":{"start":1677660284423,"stop":1677660293497,"duration":9074},"description":"\n        Check: Header -> button [Trade Now]\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Header -&gt; button [Trade Now]\n    Language: All. License: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (888, 709)\n  (Session info: chrome=110.0.5481.100)\nStacktrace:\n0   chromedriver                        0x0000000101dc0138 chromedriver + 4923704\n1   chromedriver                        0x0000000101d389d3 chromedriver + 4368851\n2   chromedriver                        0x0000000101981787 chromedriver + 472967\n3   chromedriver                        0x00000001019ceeaf chromedriver + 790191\n4   chromedriver                        0x00000001019cc2b9 chromedriver + 778937\n5   chromedriver                        0x00000001019c8ec4 chromedriver + 765636\n6   chromedriver                        0x00000001019c79db chromedriver + 760283\n7   chromedriver                        0x00000001019b8303 chromedriver + 697091\n8   chromedriver                        0x00000001019eefb2 chromedriver + 921522\n9   chromedriver                        0x00000001019b7971 chromedriver + 694641\n10  chromedriver                        0x00000001019ef1de chromedriver + 922078\n11  chromedriver                        0x0000000101a09c0f chromedriver + 1031183\n12  chromedriver                        0x00000001019eed23 chromedriver + 920867\n13  chromedriver                        0x00000001019b5a4b chromedriver + 686667\n14  chromedriver                        0x00000001019b7044 chromedriver + 692292\n15  chromedriver                        0x0000000101d8b8fe chromedriver + 4708606\n16  chromedriver                        0x0000000101d90e22 chromedriver + 4730402\n17  chromedriver                        0x0000000101d996bf chromedriver + 4765375\n18  chromedriver                        0x0000000101d91e80 chromedriver + 4734592\n19  chromedriver                        0x0000000101d62975 chromedriver + 4540789\n20  chromedriver                        0x0000000101db3e78 chromedriver + 4873848\n21  chromedriver                        0x0000000101db3ff5 chromedriver + 4874229\n22  chromedriver                        0x0000000101dc86de chromedriver + 4957918\n23  libsystem_pthread.dylib             0x00007ff80b2954e1 _pthread_start + 125\n24  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15","statusTrace":"self = <us_01_capital_test.Test_US_01 object at 0x109aef790>, worker_id = 'gw1'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"72d4beee13c005c02af28add3f18f95a\")>\ncur_login = 'Empty', cur_password = 'Empty', cur_role = 'NoReg'\ncur_language = 'cn', cur_license = 'CCSTV', prob_run_tc = ''\ndatetime_now = '2023-03-01 08:44:44.422512'\n\n    @allure.feature(\"TS_02 | Testing header\")\n    @allure.story(\"TC_02.01 | Testing 'Trade Now' button on the header\")\n    @allure.step(\"Start test button 'Trade Now' on header.\")\n    @allure.title(\"TC_02_01 with parameters: {cur_role}, {cur_language}, {cur_license}.   {datetime_now}\")\n    def test_02_01_header_button_trade_now(\n            self, worker_id, d, cur_login, cur_password, cur_role, cur_language, cur_license, prob_run_tc, datetime_now\n    ):\n        \"\"\"\n        Check: Header -> button [Trade Now]\n        Language: All. License: All.\n        \"\"\"\n        if prob_run_tc != \"\":\n            pytest.skip(f\"{prob_run_tc}   {datetime_now}\")\n    \n        print(f\"worker_id = {worker_id}\")\n    \n        page = Conditions(d, \"\")\n>       test_link = page.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_login, cur_password, cur_role, cur_language, cur_license\n        )\n\ntests/Capital/us_01/us_01_capital_test.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions.py:60: in preconditions\n    self.button_reject_all_cookies_click()\npages/base_page.py:253: in button_reject_all_cookies_click\n    button.click()\n../../../Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:403: in _execute\n    return self._parent.execute(command, params)\n../../../Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1092765d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...ff80b2954e1 _pthread_start + 125\\\\n24  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (888, 709)\nE         (Session info: chrome=110.0.5481.100)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000101dc0138 chromedriver + 4923704\nE       1   chromedriver                        0x0000000101d389d3 chromedriver + 4368851\nE       2   chromedriver                        0x0000000101981787 chromedriver + 472967\nE       3   chromedriver                        0x00000001019ceeaf chromedriver + 790191\nE       4   chromedriver                        0x00000001019cc2b9 chromedriver + 778937\nE       5   chromedriver                        0x00000001019c8ec4 chromedriver + 765636\nE       6   chromedriver                        0x00000001019c79db chromedriver + 760283\nE       7   chromedriver                        0x00000001019b8303 chromedriver + 697091\nE       8   chromedriver                        0x00000001019eefb2 chromedriver + 921522\nE       9   chromedriver                        0x00000001019b7971 chromedriver + 694641\nE       10  chromedriver                        0x00000001019ef1de chromedriver + 922078\nE       11  chromedriver                        0x0000000101a09c0f chromedriver + 1031183\nE       12  chromedriver                        0x00000001019eed23 chromedriver + 920867\nE       13  chromedriver                        0x00000001019b5a4b chromedriver + 686667\nE       14  chromedriver                        0x00000001019b7044 chromedriver + 692292\nE       15  chromedriver                        0x0000000101d8b8fe chromedriver + 4708606\nE       16  chromedriver                        0x0000000101d90e22 chromedriver + 4730402\nE       17  chromedriver                        0x0000000101d996bf chromedriver + 4765375\nE       18  chromedriver                        0x0000000101d91e80 chromedriver + 4734592\nE       19  chromedriver                        0x0000000101d62975 chromedriver + 4540789\nE       20  chromedriver                        0x0000000101db3e78 chromedriver + 4873848\nE       21  chromedriver                        0x0000000101db3ff5 chromedriver + 4874229\nE       22  chromedriver                        0x0000000101dc86de chromedriver + 4957918\nE       23  libsystem_pthread.dylib             0x00007ff80b2954e1 _pthread_start + 125\nE       24  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15\n\n../../../Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"worker_id","time":{"start":1677660258374,"stop":1677660258374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1677660258374,"stop":1677660258374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"d","time":{"start":1677660258374,"stop":1677660265729,"duration":7355},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"go","time":{"start":1677660265729,"stop":1677660265730,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_role","time":{"start":1677660265730,"stop":1677660265730,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_license","time":{"start":1677660265730,"stop":1677660265731,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_language","time":{"start":1677660284414,"stop":1677660284415,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"prob_run_tc","time":{"start":1677660284422,"stop":1677660284422,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"datetime_now","time":{"start":1677660284422,"stop":1677660284423,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        Check: Header -> button [Trade Now]\n        Language: All. License: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (888, 709)\n  (Session info: chrome=110.0.5481.100)\nStacktrace:\n0   chromedriver                        0x0000000101dc0138 chromedriver + 4923704\n1   chromedriver                        0x0000000101d389d3 chromedriver + 4368851\n2   chromedriver                        0x0000000101981787 chromedriver + 472967\n3   chromedriver                        0x00000001019ceeaf chromedriver + 790191\n4   chromedriver                        0x00000001019cc2b9 chromedriver + 778937\n5   chromedriver                        0x00000001019c8ec4 chromedriver + 765636\n6   chromedriver                        0x00000001019c79db chromedriver + 760283\n7   chromedriver                        0x00000001019b8303 chromedriver + 697091\n8   chromedriver                        0x00000001019eefb2 chromedriver + 921522\n9   chromedriver                        0x00000001019b7971 chromedriver + 694641\n10  chromedriver                        0x00000001019ef1de chromedriver + 922078\n11  chromedriver                        0x0000000101a09c0f chromedriver + 1031183\n12  chromedriver                        0x00000001019eed23 chromedriver + 920867\n13  chromedriver                        0x00000001019b5a4b chromedriver + 686667\n14  chromedriver                        0x00000001019b7044 chromedriver + 692292\n15  chromedriver                        0x0000000101d8b8fe chromedriver + 4708606\n16  chromedriver                        0x0000000101d90e22 chromedriver + 4730402\n17  chromedriver                        0x0000000101d996bf chromedriver + 4765375\n18  chromedriver                        0x0000000101d91e80 chromedriver + 4734592\n19  chromedriver                        0x0000000101d62975 chromedriver + 4540789\n20  chromedriver                        0x0000000101db3e78 chromedriver + 4873848\n21  chromedriver                        0x0000000101db3ff5 chromedriver + 4874229\n22  chromedriver                        0x0000000101dc86de chromedriver + 4957918\n23  libsystem_pthread.dylib             0x00007ff80b2954e1 _pthread_start + 125\n24  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15","statusTrace":"self = <us_01_capital_test.Test_US_01 object at 0x109aef790>, worker_id = 'gw1'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"72d4beee13c005c02af28add3f18f95a\")>\ncur_login = 'Empty', cur_password = 'Empty', cur_role = 'NoReg'\ncur_language = 'cn', cur_license = 'CCSTV', prob_run_tc = ''\ndatetime_now = '2023-03-01 08:44:44.422512'\n\n    @allure.feature(\"TS_02 | Testing header\")\n    @allure.story(\"TC_02.01 | Testing 'Trade Now' button on the header\")\n    @allure.step(\"Start test button 'Trade Now' on header.\")\n    @allure.title(\"TC_02_01 with parameters: {cur_role}, {cur_language}, {cur_license}.   {datetime_now}\")\n    def test_02_01_header_button_trade_now(\n            self, worker_id, d, cur_login, cur_password, cur_role, cur_language, cur_license, prob_run_tc, datetime_now\n    ):\n        \"\"\"\n        Check: Header -> button [Trade Now]\n        Language: All. License: All.\n        \"\"\"\n        if prob_run_tc != \"\":\n            pytest.skip(f\"{prob_run_tc}   {datetime_now}\")\n    \n        print(f\"worker_id = {worker_id}\")\n    \n        page = Conditions(d, \"\")\n>       test_link = page.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_login, cur_password, cur_role, cur_language, cur_license\n        )\n\ntests/Capital/us_01/us_01_capital_test.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions.py:60: in preconditions\n    self.button_reject_all_cookies_click()\npages/base_page.py:253: in button_reject_all_cookies_click\n    button.click()\n../../../Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:403: in _execute\n    return self._parent.execute(command, params)\n../../../Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1092765d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...ff80b2954e1 _pthread_start + 125\\\\n24  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (888, 709)\nE         (Session info: chrome=110.0.5481.100)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000101dc0138 chromedriver + 4923704\nE       1   chromedriver                        0x0000000101d389d3 chromedriver + 4368851\nE       2   chromedriver                        0x0000000101981787 chromedriver + 472967\nE       3   chromedriver                        0x00000001019ceeaf chromedriver + 790191\nE       4   chromedriver                        0x00000001019cc2b9 chromedriver + 778937\nE       5   chromedriver                        0x00000001019c8ec4 chromedriver + 765636\nE       6   chromedriver                        0x00000001019c79db chromedriver + 760283\nE       7   chromedriver                        0x00000001019b8303 chromedriver + 697091\nE       8   chromedriver                        0x00000001019eefb2 chromedriver + 921522\nE       9   chromedriver                        0x00000001019b7971 chromedriver + 694641\nE       10  chromedriver                        0x00000001019ef1de chromedriver + 922078\nE       11  chromedriver                        0x0000000101a09c0f chromedriver + 1031183\nE       12  chromedriver                        0x00000001019eed23 chromedriver + 920867\nE       13  chromedriver                        0x00000001019b5a4b chromedriver + 686667\nE       14  chromedriver                        0x00000001019b7044 chromedriver + 692292\nE       15  chromedriver                        0x0000000101d8b8fe chromedriver + 4708606\nE       16  chromedriver                        0x0000000101d90e22 chromedriver + 4730402\nE       17  chromedriver                        0x0000000101d996bf chromedriver + 4765375\nE       18  chromedriver                        0x0000000101d91e80 chromedriver + 4734592\nE       19  chromedriver                        0x0000000101d62975 chromedriver + 4540789\nE       20  chromedriver                        0x0000000101db3e78 chromedriver + 4873848\nE       21  chromedriver                        0x0000000101db3ff5 chromedriver + 4874229\nE       22  chromedriver                        0x0000000101dc86de chromedriver + 4957918\nE       23  libsystem_pthread.dylib             0x00007ff80b2954e1 _pthread_start + 125\nE       24  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15\n\n../../../Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Start test button 'Trade Now' on header.","time":{"start":1677660284424,"stop":1677660293496,"duration":9072},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (888, 709)\n  (Session info: chrome=110.0.5481.100)\nStacktrace:\n0   chromedriver                        0x0000000101dc0138 chromedriver + 4923704\n1   chromedriver                        0x0000000101d389d3 chromedriver + 4368851\n2   chromedriver                        0x0000000101981787 chromedriver + 472967\n3   chromedriver                        0x00000001019ceeaf chromedriver + 790191\n4   chromedriver                        0x00000001019cc2b9 chromedriver + 778937\n5   chromedriver                        0x00000001019c8ec4 chromedriver + 765636\n6   chromedriver                        0x00000001019c79db chromedriver + 760283\n7   chromedriver                        0x00000001019b8303 chromedriver + 697091\n8   chromedriver                        0x00000001019eefb2 chromedriver + 921522\n9   chromedriver                        0x00000001019b7971 chromedriver + 694641\n10  chromedriver                        0x00000001019ef1de chromedriver + 922078\n11  chromedriver                        0x0000000101a09c0f chromedriver + 1031183\n12  chromedriver                        0x00000001019eed23 chromedriver + 920867\n13  chromedriver                        0x00000001019b5a4b chromedriver + 686667\n14  chromedriver                        0x00000001019b7044 chromedriver + 692292\n15  chromedriver                        0x0000000101d8b8fe chromedriver + 4708606\n16  chromedriver                        0x0000000101d90e22 chromedriver + 4730402\n17  chromedriver                        0x0000000101d996bf chromedriver + 4765375\n18  chromedriver                        0x0000000101d91e80 chromedriver + 4734592\n19  chromedriver                        0x0000000101d62975 chromedriver + 4540789\n20  chromedriver                        0x0000000101db3e78 chromedriver + 4873848\n21  chromedriver                        0x0000000101db3ff5 chromedriver + 4874229\n22  chromedriver                        0x0000000101dc86de chromedriver + 4957918\n23  libsystem_pthread.dylib             0x00007ff80b2954e1 _pthread_start + 125\n24  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15\n\n","statusTrace":"  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/runner/work/TestCapitalCom/TestCapitalCom/tests/Capital/us_01/us_01_capital_test.py\", line 99, in test_02_01_header_button_trade_now\n    test_link = page.preconditions(\n                ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/runner/work/TestCapitalCom/TestCapitalCom/pages/conditions.py\", line 60, in preconditions\n    self.button_reject_all_cookies_click()\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/runner/work/TestCapitalCom/TestCapitalCom/pages/base_page.py\", line 253, in button_reject_all_cookies_click\n    button.click()\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 403, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Set preconditions","time":{"start":1677660284424,"stop":1677660293495,"duration":9071},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (888, 709)\n  (Session info: chrome=110.0.5481.100)\nStacktrace:\n0   chromedriver                        0x0000000101dc0138 chromedriver + 4923704\n1   chromedriver                        0x0000000101d389d3 chromedriver + 4368851\n2   chromedriver                        0x0000000101981787 chromedriver + 472967\n3   chromedriver                        0x00000001019ceeaf chromedriver + 790191\n4   chromedriver                        0x00000001019cc2b9 chromedriver + 778937\n5   chromedriver                        0x00000001019c8ec4 chromedriver + 765636\n6   chromedriver                        0x00000001019c79db chromedriver + 760283\n7   chromedriver                        0x00000001019b8303 chromedriver + 697091\n8   chromedriver                        0x00000001019eefb2 chromedriver + 921522\n9   chromedriver                        0x00000001019b7971 chromedriver + 694641\n10  chromedriver                        0x00000001019ef1de chromedriver + 922078\n11  chromedriver                        0x0000000101a09c0f chromedriver + 1031183\n12  chromedriver                        0x00000001019eed23 chromedriver + 920867\n13  chromedriver                        0x00000001019b5a4b chromedriver + 686667\n14  chromedriver                        0x00000001019b7044 chromedriver + 692292\n15  chromedriver                        0x0000000101d8b8fe chromedriver + 4708606\n16  chromedriver                        0x0000000101d90e22 chromedriver + 4730402\n17  chromedriver                        0x0000000101d996bf chromedriver + 4765375\n18  chromedriver                        0x0000000101d91e80 chromedriver + 4734592\n19  chromedriver                        0x0000000101d62975 chromedriver + 4540789\n20  chromedriver                        0x0000000101db3e78 chromedriver + 4873848\n21  chromedriver                        0x0000000101db3ff5 chromedriver + 4874229\n22  chromedriver                        0x0000000101dc86de chromedriver + 4957918\n23  libsystem_pthread.dylib             0x00007ff80b2954e1 _pthread_start + 125\n24  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15\n\n","statusTrace":"  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/runner/work/TestCapitalCom/TestCapitalCom/pages/conditions.py\", line 60, in preconditions\n    self.button_reject_all_cookies_click()\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/runner/work/TestCapitalCom/TestCapitalCom/pages/base_page.py\", line 253, in button_reject_all_cookies_click\n    button.click()\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 403, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"2023-03-01 08:44:15.393721.   Load page.","time":{"start":1677660284625,"stop":1677660286602,"duration":1977},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"2023-03-01 08:44:15.393721.   Load page.","time":{"start":1677660286602,"stop":1677660289294,"duration":2692},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"2023-03-01 08:44:15.393887. Reject all cookies.","time":{"start":1677660289294,"stop":1677660293495,"duration":4201},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (888, 709)\n  (Session info: chrome=110.0.5481.100)\nStacktrace:\n0   chromedriver                        0x0000000101dc0138 chromedriver + 4923704\n1   chromedriver                        0x0000000101d389d3 chromedriver + 4368851\n2   chromedriver                        0x0000000101981787 chromedriver + 472967\n3   chromedriver                        0x00000001019ceeaf chromedriver + 790191\n4   chromedriver                        0x00000001019cc2b9 chromedriver + 778937\n5   chromedriver                        0x00000001019c8ec4 chromedriver + 765636\n6   chromedriver                        0x00000001019c79db chromedriver + 760283\n7   chromedriver                        0x00000001019b8303 chromedriver + 697091\n8   chromedriver                        0x00000001019eefb2 chromedriver + 921522\n9   chromedriver                        0x00000001019b7971 chromedriver + 694641\n10  chromedriver                        0x00000001019ef1de chromedriver + 922078\n11  chromedriver                        0x0000000101a09c0f chromedriver + 1031183\n12  chromedriver                        0x00000001019eed23 chromedriver + 920867\n13  chromedriver                        0x00000001019b5a4b chromedriver + 686667\n14  chromedriver                        0x00000001019b7044 chromedriver + 692292\n15  chromedriver                        0x0000000101d8b8fe chromedriver + 4708606\n16  chromedriver                        0x0000000101d90e22 chromedriver + 4730402\n17  chromedriver                        0x0000000101d996bf chromedriver + 4765375\n18  chromedriver                        0x0000000101d91e80 chromedriver + 4734592\n19  chromedriver                        0x0000000101d62975 chromedriver + 4540789\n20  chromedriver                        0x0000000101db3e78 chromedriver + 4873848\n21  chromedriver                        0x0000000101db3ff5 chromedriver + 4874229\n22  chromedriver                        0x0000000101dc86de chromedriver + 4957918\n23  libsystem_pthread.dylib             0x00007ff80b2954e1 _pthread_start + 125\n24  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15\n\n","statusTrace":"  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/runner/work/TestCapitalCom/TestCapitalCom/pages/base_page.py\", line 253, in button_reject_all_cookies_click\n    button.click()\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 403, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"72d4beee13c005c02af28add3f18f95a\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"login","value":"'Empty'"},{"name":"password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_language","value":"'cn'"},{"name":"cur_license","value":"'CCSTV'"}],"stepsCount":3,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"worker_id","value":"'gw1'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"72d4beee13c005c02af28add3f18f95a\")>"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_language","value":"'cn'"},{"name":"cur_license","value":"'CCSTV'"},{"name":"prob_run_tc","value":"''"},{"name":"datetime_now","value":"'2023-03-01 08:44:44.422512'"}],"stepsCount":4,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"7aeaaa1aa82b853","name":"Screeshot","source":"7aeaaa1aa82b853.png","type":"image/png","size":219300},{"uid":"7acc8917fa119241","name":"stdout","source":"7acc8917fa119241.txt","type":"text/plain","size":142}],"parameters":[],"stepsCount":5,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"go::0","time":{"start":1677661005313,"stop":1677661006009,"duration":696},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"TS_02 | Testing header"},{"name":"epic","value":"US_01 | Testing registration and autorization web elements on the main page capital.com"},{"name":"story","value":"TC_02.01 | Testing 'Trade Now' button on the header"},{"name":"tag","value":"us_01"},{"name":"parentSuite","value":"tests.Capital.us_01"},{"name":"suite","value":"us_01_capital_test"},{"name":"subSuite","value":"Test_US_01"},{"name":"host","value":"Mac-1677660156395.local"},{"name":"thread","value":"3492-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.Capital.us_01.us_01_capital_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_language","value":"'cn'"},{"name":"cur_license","value":"'CCSTV'"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"go","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["us_01"]},"source":"91d28add7715cbe4.json","parameterValues":["'cn'","'CCSTV'","'Empty'","'Empty'","'NoReg'","'chrome'"]}