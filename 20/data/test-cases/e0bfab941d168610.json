{"uid":"e0bfab941d168610","name":"TC_03_02 with parameters: NoReg, de, ASIC.   2023-03-01 08:47:10.721025","fullName":"tests.Capital.us_01.us_01_capital_test.Test_US_01#test_03_02_banner_main_tab1_button_practise_for_free","historyId":"6e9349171b9f233101f653061d376f91","time":{"start":1677660430722,"stop":1677660447181,"duration":16459},"description":"\n        Check: tab \"1\" -> button \"Practice for free\"\n        Language: only En. Licence: All.\n        ","descriptionHtml":"<pre><code>    Check: tab &quot;1&quot; -&gt; button &quot;Practice for free&quot;\n    Language: only En. Licence: All.\n</code></pre>\n","status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.bannersHome__buttons > a[data-type='topbanner_trade_cfds_demo']\"}\n  (Session info: chrome=110.0.5481.100)\nStacktrace:\n0   chromedriver                        0x0000000101a0b138 chromedriver + 4923704\n1   chromedriver                        0x00000001019839d3 chromedriver + 4368851\n2   chromedriver                        0x00000001015cc787 chromedriver + 472967\n3   chromedriver                        0x0000000101610ba3 chromedriver + 752547\n4   chromedriver                        0x0000000101610df1 chromedriver + 753137\n5   chromedriver                        0x0000000101657734 chromedriver + 1042228\n6   chromedriver                        0x0000000101639fdd chromedriver + 921565\n7   chromedriver                        0x0000000101654c0f chromedriver + 1031183\n8   chromedriver                        0x0000000101639d23 chromedriver + 920867\n9   chromedriver                        0x0000000101600a4b chromedriver + 686667\n10  chromedriver                        0x0000000101602044 chromedriver + 692292\n11  chromedriver                        0x00000001019d68fe chromedriver + 4708606\n12  chromedriver                        0x00000001019dbe22 chromedriver + 4730402\n13  chromedriver                        0x00000001019e46bf chromedriver + 4765375\n14  chromedriver                        0x00000001019dce80 chromedriver + 4734592\n15  chromedriver                        0x00000001019ad975 chromedriver + 4540789\n16  chromedriver                        0x00000001019fee78 chromedriver + 4873848\n17  chromedriver                        0x00000001019feff5 chromedriver + 4874229\n18  chromedriver                        0x0000000101a136de chromedriver + 4957918\n19  libsystem_pthread.dylib             0x00007ff80b2954e1 _pthread_start + 125\n20  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15","statusTrace":"self = <us_01_capital_test.Test_US_01 object at 0x10b6f0890>, worker_id = 'gw2'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"291d5e7ab75d0e1a0be874e1aa27a9bb\")>\ncur_login = 'Empty', cur_password = 'Empty', cur_role = 'NoReg'\ncur_language = 'de', cur_license = 'ASIC', prob_run_tc = ''\ndatetime_now = '2023-03-01 08:47:10.721025'\n\n    @pytest.mark.xfail\n    @allure.feature(\"TS_03 | Testing '1' tab 'Main' banner. Only for 'En' language\")\n    @allure.story(\"TC_03.02 | Testing 'Practise for free' button on the 1 tab 'Main' banner\")\n    @allure.step(\"Start test button 'Practise for free' on tab1 'Main' banner (for all License).\")\n    @allure.title(\"TC_03_02 with parameters: {cur_role}, {cur_language}, {cur_license}.   {datetime_now}\")\n    def test_03_02_banner_main_tab1_button_practise_for_free(\n            self, worker_id, d, cur_login, cur_password, cur_role, cur_language, cur_license, prob_run_tc, datetime_now\n    ):\n        \"\"\"\n        Check: tab \"1\" -> button \"Practice for free\"\n        Language: only En. Licence: All.\n        \"\"\"\n        print(f\"worker_id = {worker_id}\")\n    \n        if prob_run_tc != \"\":\n            pytest.skip(f\"{prob_run_tc}   {datetime_now}\")\n    \n        page = Conditions(d, \"\")\n        test_link = page.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_login, cur_password, cur_role, cur_language, cur_license\n        )\n    \n        page = Capital(d, test_link)\n        if not page.current_page_is(test_link):\n            page.open_page()\n    \n        page.banner_main_tab1_click()\n>       page.banner_main_tab1_button_practise_for_free_click()\n\ntests/Capital/us_01/us_01_capital_test.py:189: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Capital/capital.py:75: in banner_main_tab1_button_practise_for_free_click\n    self.browser.find_element(*MainBanner.TAB1_PRACTISE_FOR_FREE).click()\n../../../Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:830: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10acae5d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff80b2954e1 _pthread_start + 125\\\\n20  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.bannersHome__buttons > a[data-type='topbanner_trade_cfds_demo']\"}\nE         (Session info: chrome=110.0.5481.100)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000101a0b138 chromedriver + 4923704\nE       1   chromedriver                        0x00000001019839d3 chromedriver + 4368851\nE       2   chromedriver                        0x00000001015cc787 chromedriver + 472967\nE       3   chromedriver                        0x0000000101610ba3 chromedriver + 752547\nE       4   chromedriver                        0x0000000101610df1 chromedriver + 753137\nE       5   chromedriver                        0x0000000101657734 chromedriver + 1042228\nE       6   chromedriver                        0x0000000101639fdd chromedriver + 921565\nE       7   chromedriver                        0x0000000101654c0f chromedriver + 1031183\nE       8   chromedriver                        0x0000000101639d23 chromedriver + 920867\nE       9   chromedriver                        0x0000000101600a4b chromedriver + 686667\nE       10  chromedriver                        0x0000000101602044 chromedriver + 692292\nE       11  chromedriver                        0x00000001019d68fe chromedriver + 4708606\nE       12  chromedriver                        0x00000001019dbe22 chromedriver + 4730402\nE       13  chromedriver                        0x00000001019e46bf chromedriver + 4765375\nE       14  chromedriver                        0x00000001019dce80 chromedriver + 4734592\nE       15  chromedriver                        0x00000001019ad975 chromedriver + 4540789\nE       16  chromedriver                        0x00000001019fee78 chromedriver + 4873848\nE       17  chromedriver                        0x00000001019feff5 chromedriver + 4874229\nE       18  chromedriver                        0x0000000101a136de chromedriver + 4957918\nE       19  libsystem_pthread.dylib             0x00007ff80b2954e1 _pthread_start + 125\nE       20  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15\n\n../../../Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1677660258375,"stop":1677660258376,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1677660258375,"stop":1677660258375,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"d","time":{"start":1677660258376,"stop":1677660265729,"duration":7353},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"go","time":{"start":1677660265729,"stop":1677660265730,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_language","time":{"start":1677660265730,"stop":1677660265730,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_role","time":{"start":1677660265730,"stop":1677660265730,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_license","time":{"start":1677660403830,"stop":1677660403830,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"prob_run_tc","time":{"start":1677660430721,"stop":1677660430721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"datetime_now","time":{"start":1677660430721,"stop":1677660430721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        Check: tab \"1\" -> button \"Practice for free\"\n        Language: only En. Licence: All.\n        ","status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.bannersHome__buttons > a[data-type='topbanner_trade_cfds_demo']\"}\n  (Session info: chrome=110.0.5481.100)\nStacktrace:\n0   chromedriver                        0x0000000101a0b138 chromedriver + 4923704\n1   chromedriver                        0x00000001019839d3 chromedriver + 4368851\n2   chromedriver                        0x00000001015cc787 chromedriver + 472967\n3   chromedriver                        0x0000000101610ba3 chromedriver + 752547\n4   chromedriver                        0x0000000101610df1 chromedriver + 753137\n5   chromedriver                        0x0000000101657734 chromedriver + 1042228\n6   chromedriver                        0x0000000101639fdd chromedriver + 921565\n7   chromedriver                        0x0000000101654c0f chromedriver + 1031183\n8   chromedriver                        0x0000000101639d23 chromedriver + 920867\n9   chromedriver                        0x0000000101600a4b chromedriver + 686667\n10  chromedriver                        0x0000000101602044 chromedriver + 692292\n11  chromedriver                        0x00000001019d68fe chromedriver + 4708606\n12  chromedriver                        0x00000001019dbe22 chromedriver + 4730402\n13  chromedriver                        0x00000001019e46bf chromedriver + 4765375\n14  chromedriver                        0x00000001019dce80 chromedriver + 4734592\n15  chromedriver                        0x00000001019ad975 chromedriver + 4540789\n16  chromedriver                        0x00000001019fee78 chromedriver + 4873848\n17  chromedriver                        0x00000001019feff5 chromedriver + 4874229\n18  chromedriver                        0x0000000101a136de chromedriver + 4957918\n19  libsystem_pthread.dylib             0x00007ff80b2954e1 _pthread_start + 125\n20  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15","statusTrace":"self = <us_01_capital_test.Test_US_01 object at 0x10b6f0890>, worker_id = 'gw2'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"291d5e7ab75d0e1a0be874e1aa27a9bb\")>\ncur_login = 'Empty', cur_password = 'Empty', cur_role = 'NoReg'\ncur_language = 'de', cur_license = 'ASIC', prob_run_tc = ''\ndatetime_now = '2023-03-01 08:47:10.721025'\n\n    @pytest.mark.xfail\n    @allure.feature(\"TS_03 | Testing '1' tab 'Main' banner. Only for 'En' language\")\n    @allure.story(\"TC_03.02 | Testing 'Practise for free' button on the 1 tab 'Main' banner\")\n    @allure.step(\"Start test button 'Practise for free' on tab1 'Main' banner (for all License).\")\n    @allure.title(\"TC_03_02 with parameters: {cur_role}, {cur_language}, {cur_license}.   {datetime_now}\")\n    def test_03_02_banner_main_tab1_button_practise_for_free(\n            self, worker_id, d, cur_login, cur_password, cur_role, cur_language, cur_license, prob_run_tc, datetime_now\n    ):\n        \"\"\"\n        Check: tab \"1\" -> button \"Practice for free\"\n        Language: only En. Licence: All.\n        \"\"\"\n        print(f\"worker_id = {worker_id}\")\n    \n        if prob_run_tc != \"\":\n            pytest.skip(f\"{prob_run_tc}   {datetime_now}\")\n    \n        page = Conditions(d, \"\")\n        test_link = page.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_login, cur_password, cur_role, cur_language, cur_license\n        )\n    \n        page = Capital(d, test_link)\n        if not page.current_page_is(test_link):\n            page.open_page()\n    \n        page.banner_main_tab1_click()\n>       page.banner_main_tab1_button_practise_for_free_click()\n\ntests/Capital/us_01/us_01_capital_test.py:189: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Capital/capital.py:75: in banner_main_tab1_button_practise_for_free_click\n    self.browser.find_element(*MainBanner.TAB1_PRACTISE_FOR_FREE).click()\n../../../Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:830: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10acae5d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff80b2954e1 _pthread_start + 125\\\\n20  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.bannersHome__buttons > a[data-type='topbanner_trade_cfds_demo']\"}\nE         (Session info: chrome=110.0.5481.100)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000101a0b138 chromedriver + 4923704\nE       1   chromedriver                        0x00000001019839d3 chromedriver + 4368851\nE       2   chromedriver                        0x00000001015cc787 chromedriver + 472967\nE       3   chromedriver                        0x0000000101610ba3 chromedriver + 752547\nE       4   chromedriver                        0x0000000101610df1 chromedriver + 753137\nE       5   chromedriver                        0x0000000101657734 chromedriver + 1042228\nE       6   chromedriver                        0x0000000101639fdd chromedriver + 921565\nE       7   chromedriver                        0x0000000101654c0f chromedriver + 1031183\nE       8   chromedriver                        0x0000000101639d23 chromedriver + 920867\nE       9   chromedriver                        0x0000000101600a4b chromedriver + 686667\nE       10  chromedriver                        0x0000000101602044 chromedriver + 692292\nE       11  chromedriver                        0x00000001019d68fe chromedriver + 4708606\nE       12  chromedriver                        0x00000001019dbe22 chromedriver + 4730402\nE       13  chromedriver                        0x00000001019e46bf chromedriver + 4765375\nE       14  chromedriver                        0x00000001019dce80 chromedriver + 4734592\nE       15  chromedriver                        0x00000001019ad975 chromedriver + 4540789\nE       16  chromedriver                        0x00000001019fee78 chromedriver + 4873848\nE       17  chromedriver                        0x00000001019feff5 chromedriver + 4874229\nE       18  chromedriver                        0x0000000101a136de chromedriver + 4957918\nE       19  libsystem_pthread.dylib             0x00007ff80b2954e1 _pthread_start + 125\nE       20  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15\n\n../../../Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","steps":[{"name":"Start test button 'Practise for free' on tab1 'Main' banner (for all License).","time":{"start":1677660430722,"stop":1677660447180,"duration":16458},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.bannersHome__buttons > a[data-type='topbanner_trade_cfds_demo']\"}\n  (Session info: chrome=110.0.5481.100)\nStacktrace:\n0   chromedriver                        0x0000000101a0b138 chromedriver + 4923704\n1   chromedriver                        0x00000001019839d3 chromedriver + 4368851\n2   chromedriver                        0x00000001015cc787 chromedriver + 472967\n3   chromedriver                        0x0000000101610ba3 chromedriver + 752547\n4   chromedriver                        0x0000000101610df1 chromedriver + 753137\n5   chromedriver                        0x0000000101657734 chromedriver + 1042228\n6   chromedriver                        0x0000000101639fdd chromedriver + 921565\n7   chromedriver                        0x0000000101654c0f chromedriver + 1031183\n8   chromedriver                        0x0000000101639d23 chromedriver + 920867\n9   chromedriver                        0x0000000101600a4b chromedriver + 686667\n10  chromedriver                        0x0000000101602044 chromedriver + 692292\n11  chromedriver                        0x00000001019d68fe chromedriver + 4708606\n12  chromedriver                        0x00000001019dbe22 chromedriver + 4730402\n13  chromedriver                        0x00000001019e46bf chromedriver + 4765375\n14  chromedriver                        0x00000001019dce80 chromedriver + 4734592\n15  chromedriver                        0x00000001019ad975 chromedriver + 4540789\n16  chromedriver                        0x00000001019fee78 chromedriver + 4873848\n17  chromedriver                        0x00000001019feff5 chromedriver + 4874229\n18  chromedriver                        0x0000000101a136de chromedriver + 4957918\n19  libsystem_pthread.dylib             0x00007ff80b2954e1 _pthread_start + 125\n20  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15\n\n","statusTrace":"  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/runner/work/TestCapitalCom/TestCapitalCom/tests/Capital/us_01/us_01_capital_test.py\", line 189, in test_03_02_banner_main_tab1_button_practise_for_free\n    page.banner_main_tab1_button_practise_for_free_click()\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/runner/work/TestCapitalCom/TestCapitalCom/pages/Capital/capital.py\", line 75, in banner_main_tab1_button_practise_for_free_click\n    self.browser.find_element(*MainBanner.TAB1_PRACTISE_FOR_FREE).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 830, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Set preconditions","time":{"start":1677660430723,"stop":1677660430723,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"291d5e7ab75d0e1a0be874e1aa27a9bb\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"login","value":"'Empty'"},{"name":"password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_language","value":"'de'"},{"name":"cur_license","value":"'ASIC'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"2023-03-01 08:44:15.475884. Click tab 'Spread betting'(tab1) on banner 'Main'.","time":{"start":1677660430736,"stop":1677660430839,"duration":103},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"2023-03-01 08:44:15.475944.   Click button 'Practise for free' on banner 'Main' tab '1'.","time":{"start":1677660430839,"stop":1677660447179,"duration":16340},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.bannersHome__buttons > a[data-type='topbanner_trade_cfds_demo']\"}\n  (Session info: chrome=110.0.5481.100)\nStacktrace:\n0   chromedriver                        0x0000000101a0b138 chromedriver + 4923704\n1   chromedriver                        0x00000001019839d3 chromedriver + 4368851\n2   chromedriver                        0x00000001015cc787 chromedriver + 472967\n3   chromedriver                        0x0000000101610ba3 chromedriver + 752547\n4   chromedriver                        0x0000000101610df1 chromedriver + 753137\n5   chromedriver                        0x0000000101657734 chromedriver + 1042228\n6   chromedriver                        0x0000000101639fdd chromedriver + 921565\n7   chromedriver                        0x0000000101654c0f chromedriver + 1031183\n8   chromedriver                        0x0000000101639d23 chromedriver + 920867\n9   chromedriver                        0x0000000101600a4b chromedriver + 686667\n10  chromedriver                        0x0000000101602044 chromedriver + 692292\n11  chromedriver                        0x00000001019d68fe chromedriver + 4708606\n12  chromedriver                        0x00000001019dbe22 chromedriver + 4730402\n13  chromedriver                        0x00000001019e46bf chromedriver + 4765375\n14  chromedriver                        0x00000001019dce80 chromedriver + 4734592\n15  chromedriver                        0x00000001019ad975 chromedriver + 4540789\n16  chromedriver                        0x00000001019fee78 chromedriver + 4873848\n17  chromedriver                        0x00000001019feff5 chromedriver + 4874229\n18  chromedriver                        0x0000000101a136de chromedriver + 4957918\n19  libsystem_pthread.dylib             0x00007ff80b2954e1 _pthread_start + 125\n20  libsystem_pthread.dylib             0x00007ff80b290f6b thread_start + 15\n\n","statusTrace":"  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/runner/work/TestCapitalCom/TestCapitalCom/pages/Capital/capital.py\", line 75, in banner_main_tab1_button_practise_for_free_click\n    self.browser.find_element(*MainBanner.TAB1_PRACTISE_FOR_FREE).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 830, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/runner/Library/Caches/pypoetry/virtualenvs/testcapitalcom-UU-N3UGl-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[{"name":"worker_id","value":"'gw2'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"291d5e7ab75d0e1a0be874e1aa27a9bb\")>"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_language","value":"'de'"},{"name":"cur_license","value":"'ASIC'"},{"name":"prob_run_tc","value":"''"},{"name":"datetime_now","value":"'2023-03-01 08:47:10.721025'"}],"stepsCount":3,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"ae086b2add9e25d2","name":"Screeshot","source":"ae086b2add9e25d2.png","type":"image/png","size":1996210},{"uid":"8cd763663dcf8e95","name":"log","source":"8cd763663dcf8e95.txt","type":"text/plain","size":2536},{"uid":"d708e79f19f1ff73","name":"stdout","source":"d708e79f19f1ff73.txt","type":"text/plain","size":16}],"parameters":[],"stepsCount":4,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"go::0","time":{"start":1677661005680,"stop":1677661006197,"duration":517},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"TC_03.02 | Testing 'Practise for free' button on the 1 tab 'Main' banner"},{"name":"epic","value":"US_01 | Testing registration and autorization web elements on the main page capital.com"},{"name":"feature","value":"TS_03 | Testing '1' tab 'Main' banner. Only for 'En' language"},{"name":"tag","value":"@pytest.mark.xfail"},{"name":"tag","value":"us_01"},{"name":"parentSuite","value":"tests.Capital.us_01"},{"name":"suite","value":"us_01_capital_test"},{"name":"subSuite","value":"Test_US_01"},{"name":"host","value":"Mac-1677660156395.local"},{"name":"thread","value":"3493-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.Capital.us_01.us_01_capital_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_language","value":"'de'"},{"name":"cur_license","value":"'ASIC'"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"go","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail","us_01"]},"source":"e0bfab941d168610.json","parameterValues":["'de'","'ASIC'","'Empty'","'Empty'","'NoReg'","'chrome'"]}