{"name": "test_header_button_login[chrome-license=FCA--NoReg-Empty-Empty]", "status": "broken", "statusDetails": {"message": "TypeError: WebDriver.find_element() takes from 1 to 3 positional arguments but 38 were given", "trace": "self = <capital_com.tests.test_capital_page.TestSample object at 0x10aec0ed0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c6f50274dcd1074b0ab199007938f705\")>\ncur_login = 'Empty', cur_password = 'Empty', cur_role = 'NoReg'\ncur_language = '', cur_license = 'license=FCA'\n\n    def test_header_button_login(self, d, cur_login, cur_password, cur_role, cur_language, cur_license):\n        global test_link\n        global page\n        cur_login = cur_login\n        cur_password = cur_password\n        cur_cur_role = cur_role\n        cur_license = cur_license\n        cur_language = cur_language\n    \n        # Checks that the current test object has cur parametrs\n    \n        # page = CapitalPage(d, test_link)\n        # page.check_that_cur_page_has_header()\n    \n        # нажимаем кнопку \"Log in\"\n        page = HeaderElement(d, test_link)\n        page.click_button_login_on_header()\n        # проверяем, открылась ли Login форма\n        page = SignupLoginForm(d, test_link)\n>       page.check_that_the_login_form_is_open()\n\ntest_capital_page.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/signup_login_form.py:11: in check_that_the_login_form_is_open\n    assert self.element_is_clickable(SignupLoginFormLocators.LOGIN_LOCATOR, 5), f\"Форма 'Login' не открылась\"\n../pages/base_page.py:51: in element_is_clickable\n    return Wait(self.browser, timeout).until(\n../.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:86: in until\n    value = method(self._driver)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c6f50274dcd1074b0ab199007938f705\")>\n\n    def _predicate(driver):\n        target = mark\n        if not isinstance(target, WebElement):  # if given locator instead of WebElement\n>           target = driver.find_element(*target)  # grab element at locator\nE           TypeError: WebDriver.find_element() takes from 1 to 3 positional arguments but 38 were given\n\n../.venv/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py:312: TypeError"}, "parameters": [{"name": "go", "value": "'chrome'"}, {"name": "cur_license", "value": "'license=FCA'"}, {"name": "cur_language", "value": "''"}, {"name": "cur_role", "value": "'NoReg'"}, {"name": "cur_login", "value": "'Empty'"}, {"name": "cur_password", "value": "'Empty'"}], "start": 1670853633296, "stop": 1670854165100, "uuid": "a933be20-d0a4-49a8-b37a-c9b680476c71", "historyId": "44c83bdf97bc439056b96a3d1ec3d8b9", "testCaseId": "f21aa42bb562a1df6bdd827560cd70a2", "fullName": "tests.test_capital_page.TestSample#test_header_button_login", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_capital_page"}, {"name": "subSuite", "value": "TestSample"}, {"name": "host", "value": "MacBook-Pro-Aleksandr.local"}, {"name": "thread", "value": "30508-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_capital_page"}]}