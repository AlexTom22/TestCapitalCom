{"uid":"6cdd2d2d35774432","name":"TC_13_01 with parameters: NoReg, th, ASIC.   2023-02-02 22:29:48.745736","fullName":"tests.capital_page_test.Tests#test_13_01_widget_new_to_trading","historyId":"485a9da370490dd78dad73b07e407786","time":{"start":1675376988747,"stop":1675376989992,"duration":1245},"description":"\n        Check: widget \"New to trading?\" -> button \"Practise for free\"\n        Language: All. Licence: All.\n        ","descriptionHtml":"<pre><code>    Check: widget &quot;New to trading?&quot; -&gt; button &quot;Practise for free&quot;\n    Language: All. Licence: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/trading/signup\" class=\"button-outlined rounded js_signup __cp_b\" data-type=\"cp_ab10_1_practice\">...</a> is not clickable at point (1138, 6609). Other element would receive the click: <div class=\"section cc_ab49_4\">...</div>\n  (Session info: headless chrome=109.0.5414.119)\nStacktrace:\n#0 0x562e6cb1c303 <unknown>\n#1 0x562e6c8f0d37 <unknown>\n#2 0x562e6c933e29 <unknown>\n#3 0x562e6c931e2f <unknown>\n#4 0x562e6c92f9de <unknown>\n#5 0x562e6c92eb7d <unknown>\n#6 0x562e6c9229a5 <unknown>\n#7 0x562e6c94d982 <unknown>\n#8 0x562e6c92222f <unknown>\n#9 0x562e6c94db4e <unknown>\n#10 0x562e6c96588c <unknown>\n#11 0x562e6c94d753 <unknown>\n#12 0x562e6c920a14 <unknown>\n#13 0x562e6c921b7e <unknown>\n#14 0x562e6cb6b32e <unknown>\n#15 0x562e6cb6ec0e <unknown>\n#16 0x562e6cb51610 <unknown>\n#17 0x562e6cb6fc23 <unknown>\n#18 0x562e6cb43545 <unknown>\n#19 0x562e6cb906a8 <unknown>\n#20 0x562e6cb90836 <unknown>\n#21 0x562e6cbabd13 <unknown>\n#22 0x7fea71765b43 <unknown>","statusTrace":"self = <tests.capital_page_test.Tests object at 0x7f4443d98970>\nworker_id = 'gw1'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a38671e4b108f1709e64563ed6401cf1\")>\ncur_login = 'Empty', cur_password = 'Empty', cur_role = 'NoReg'\ncur_language = 'th', cur_license = 'ASIC', prob_run_tc = None\ndatetime_now = '2023-02-02 22:29:48.745736'\n\n    @allure.feature(\"F_13 | Testing 'New to trading?' widget\")\n    @allure.story(\"S_13.01 | Testing 'Practise for free' button on the 'Explore our platform' widget\")\n    @allure.step(\"Run test for widget 'New to trading?'.\")\n    @allure.title(\"TC_13_01 with parameters: {cur_role}, {cur_language}, {cur_license}.   {datetime_now}\")\n    def test_13_01_widget_new_to_trading(\n            self, worker_id, d, cur_login, cur_password, cur_role, cur_language, cur_license, prob_run_tc, datetime_now\n    ):\n        \"\"\"\n        Check: widget \"New to trading?\" -> button \"Practise for free\"\n        Language: All. Licence: All.\n        \"\"\"\n        global test_link\n        global page\n    \n        print(f\"worker_id = {worker_id}\")\n    \n        self.preconditions(d, cur_login, cur_password, cur_role, cur_language, cur_license)\n    \n        page = CapitalPage(d, test_link)\n        if not page.current_page_is(test_link):\n            page.open_page()\n            print(f\"{datetime.datetime.now()}   Load page: {test_link}\")\n    \n>       page.tc1301_widget_new_to_trading_button_practise_for_free_click(cur_language)\n\ntests/capital_page_test.py:1383: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/capital_com/capital_page.py:355: in tc1301_widget_new_to_trading_button_practise_for_free_click\n    button.click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:403: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4443a54520>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x562e6cb90836 \\\\u003Cunknown>\\\\n#21 0x562e6cbabd13 \\\\u003Cunknown>\\\\n#22 0x7fea71765b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/trading/signup\" class=\"button-outlined rounded js_signup __cp_b\" data-type=\"cp_ab10_1_practice\">...</a> is not clickable at point (1138, 6609). Other element would receive the click: <div class=\"section cc_ab49_4\">...</div>\nE         (Session info: headless chrome=109.0.5414.119)\nE       Stacktrace:\nE       #0 0x562e6cb1c303 <unknown>\nE       #1 0x562e6c8f0d37 <unknown>\nE       #2 0x562e6c933e29 <unknown>\nE       #3 0x562e6c931e2f <unknown>\nE       #4 0x562e6c92f9de <unknown>\nE       #5 0x562e6c92eb7d <unknown>\nE       #6 0x562e6c9229a5 <unknown>\nE       #7 0x562e6c94d982 <unknown>\nE       #8 0x562e6c92222f <unknown>\nE       #9 0x562e6c94db4e <unknown>\nE       #10 0x562e6c96588c <unknown>\nE       #11 0x562e6c94d753 <unknown>\nE       #12 0x562e6c920a14 <unknown>\nE       #13 0x562e6c921b7e <unknown>\nE       #14 0x562e6cb6b32e <unknown>\nE       #15 0x562e6cb6ec0e <unknown>\nE       #16 0x562e6cb51610 <unknown>\nE       #17 0x562e6cb6fc23 <unknown>\nE       #18 0x562e6cb43545 <unknown>\nE       #19 0x562e6cb906a8 <unknown>\nE       #20 0x562e6cb90836 <unknown>\nE       #21 0x562e6cbabd13 <unknown>\nE       #22 0x7fea71765b43 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"worker_id","time":{"start":1675366043268,"stop":1675366043268,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"d","time":{"start":1675366043269,"stop":1675366045435,"duration":2166},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1675366043269,"stop":1675366043269,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"go","time":{"start":1675366045435,"stop":1675366045436,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_role","time":{"start":1675366045436,"stop":1675366045436,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_language","time":{"start":1675376549458,"stop":1675376549458,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_license","time":{"start":1675376890245,"stop":1675376890245,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"prob_run_tc","time":{"start":1675376988745,"stop":1675376988746,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"datetime_now","time":{"start":1675376988746,"stop":1675376988746,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        Check: widget \"New to trading?\" -> button \"Practise for free\"\n        Language: All. Licence: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/trading/signup\" class=\"button-outlined rounded js_signup __cp_b\" data-type=\"cp_ab10_1_practice\">...</a> is not clickable at point (1138, 6609). Other element would receive the click: <div class=\"section cc_ab49_4\">...</div>\n  (Session info: headless chrome=109.0.5414.119)\nStacktrace:\n#0 0x562e6cb1c303 <unknown>\n#1 0x562e6c8f0d37 <unknown>\n#2 0x562e6c933e29 <unknown>\n#3 0x562e6c931e2f <unknown>\n#4 0x562e6c92f9de <unknown>\n#5 0x562e6c92eb7d <unknown>\n#6 0x562e6c9229a5 <unknown>\n#7 0x562e6c94d982 <unknown>\n#8 0x562e6c92222f <unknown>\n#9 0x562e6c94db4e <unknown>\n#10 0x562e6c96588c <unknown>\n#11 0x562e6c94d753 <unknown>\n#12 0x562e6c920a14 <unknown>\n#13 0x562e6c921b7e <unknown>\n#14 0x562e6cb6b32e <unknown>\n#15 0x562e6cb6ec0e <unknown>\n#16 0x562e6cb51610 <unknown>\n#17 0x562e6cb6fc23 <unknown>\n#18 0x562e6cb43545 <unknown>\n#19 0x562e6cb906a8 <unknown>\n#20 0x562e6cb90836 <unknown>\n#21 0x562e6cbabd13 <unknown>\n#22 0x7fea71765b43 <unknown>","statusTrace":"self = <tests.capital_page_test.Tests object at 0x7f4443d98970>\nworker_id = 'gw1'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a38671e4b108f1709e64563ed6401cf1\")>\ncur_login = 'Empty', cur_password = 'Empty', cur_role = 'NoReg'\ncur_language = 'th', cur_license = 'ASIC', prob_run_tc = None\ndatetime_now = '2023-02-02 22:29:48.745736'\n\n    @allure.feature(\"F_13 | Testing 'New to trading?' widget\")\n    @allure.story(\"S_13.01 | Testing 'Practise for free' button on the 'Explore our platform' widget\")\n    @allure.step(\"Run test for widget 'New to trading?'.\")\n    @allure.title(\"TC_13_01 with parameters: {cur_role}, {cur_language}, {cur_license}.   {datetime_now}\")\n    def test_13_01_widget_new_to_trading(\n            self, worker_id, d, cur_login, cur_password, cur_role, cur_language, cur_license, prob_run_tc, datetime_now\n    ):\n        \"\"\"\n        Check: widget \"New to trading?\" -> button \"Practise for free\"\n        Language: All. Licence: All.\n        \"\"\"\n        global test_link\n        global page\n    \n        print(f\"worker_id = {worker_id}\")\n    \n        self.preconditions(d, cur_login, cur_password, cur_role, cur_language, cur_license)\n    \n        page = CapitalPage(d, test_link)\n        if not page.current_page_is(test_link):\n            page.open_page()\n            print(f\"{datetime.datetime.now()}   Load page: {test_link}\")\n    \n>       page.tc1301_widget_new_to_trading_button_practise_for_free_click(cur_language)\n\ntests/capital_page_test.py:1383: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/capital_com/capital_page.py:355: in tc1301_widget_new_to_trading_button_practise_for_free_click\n    button.click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:403: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4443a54520>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x562e6cb90836 \\\\u003Cunknown>\\\\n#21 0x562e6cbabd13 \\\\u003Cunknown>\\\\n#22 0x7fea71765b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/trading/signup\" class=\"button-outlined rounded js_signup __cp_b\" data-type=\"cp_ab10_1_practice\">...</a> is not clickable at point (1138, 6609). Other element would receive the click: <div class=\"section cc_ab49_4\">...</div>\nE         (Session info: headless chrome=109.0.5414.119)\nE       Stacktrace:\nE       #0 0x562e6cb1c303 <unknown>\nE       #1 0x562e6c8f0d37 <unknown>\nE       #2 0x562e6c933e29 <unknown>\nE       #3 0x562e6c931e2f <unknown>\nE       #4 0x562e6c92f9de <unknown>\nE       #5 0x562e6c92eb7d <unknown>\nE       #6 0x562e6c9229a5 <unknown>\nE       #7 0x562e6c94d982 <unknown>\nE       #8 0x562e6c92222f <unknown>\nE       #9 0x562e6c94db4e <unknown>\nE       #10 0x562e6c96588c <unknown>\nE       #11 0x562e6c94d753 <unknown>\nE       #12 0x562e6c920a14 <unknown>\nE       #13 0x562e6c921b7e <unknown>\nE       #14 0x562e6cb6b32e <unknown>\nE       #15 0x562e6cb6ec0e <unknown>\nE       #16 0x562e6cb51610 <unknown>\nE       #17 0x562e6cb6fc23 <unknown>\nE       #18 0x562e6cb43545 <unknown>\nE       #19 0x562e6cb906a8 <unknown>\nE       #20 0x562e6cb90836 <unknown>\nE       #21 0x562e6cbabd13 <unknown>\nE       #22 0x7fea71765b43 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Run test for widget 'New to trading?'.","time":{"start":1675376988747,"stop":1675376989991,"duration":1244},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/trading/signup\" class=\"button-outlined rounded js_signup __cp_b\" data-type=\"cp_ab10_1_practice\">...</a> is not clickable at point (1138, 6609). Other element would receive the click: <div class=\"section cc_ab49_4\">...</div>\n  (Session info: headless chrome=109.0.5414.119)\nStacktrace:\n#0 0x562e6cb1c303 <unknown>\n#1 0x562e6c8f0d37 <unknown>\n#2 0x562e6c933e29 <unknown>\n#3 0x562e6c931e2f <unknown>\n#4 0x562e6c92f9de <unknown>\n#5 0x562e6c92eb7d <unknown>\n#6 0x562e6c9229a5 <unknown>\n#7 0x562e6c94d982 <unknown>\n#8 0x562e6c92222f <unknown>\n#9 0x562e6c94db4e <unknown>\n#10 0x562e6c96588c <unknown>\n#11 0x562e6c94d753 <unknown>\n#12 0x562e6c920a14 <unknown>\n#13 0x562e6c921b7e <unknown>\n#14 0x562e6cb6b32e <unknown>\n#15 0x562e6cb6ec0e <unknown>\n#16 0x562e6cb51610 <unknown>\n#17 0x562e6cb6fc23 <unknown>\n#18 0x562e6cb43545 <unknown>\n#19 0x562e6cb906a8 <unknown>\n#20 0x562e6cb90836 <unknown>\n#21 0x562e6cbabd13 <unknown>\n#22 0x7fea71765b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/TestCapitalCom/TestCapitalCom/tests/capital_page_test.py\", line 1383, in test_13_01_widget_new_to_trading\n    page.tc1301_widget_new_to_trading_button_practise_for_free_click(cur_language)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/TestCapitalCom/TestCapitalCom/pages/capital_com/capital_page.py\", line 355, in tc1301_widget_new_to_trading_button_practise_for_free_click\n    button.click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 403, in _execute\n    return self._parent.execute(command, params)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Set preconditions","time":{"start":1675376988747,"stop":1675376988747,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a38671e4b108f1709e64563ed6401cf1\")>"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_language","value":"'th'"},{"name":"cur_license","value":"'ASIC'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"2023-02-02 19:27:19.681779.   Click button 'Practise for free' on widget 'New to trading?'.","time":{"start":1675376988764,"stop":1675376989990,"duration":1226},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/trading/signup\" class=\"button-outlined rounded js_signup __cp_b\" data-type=\"cp_ab10_1_practice\">...</a> is not clickable at point (1138, 6609). Other element would receive the click: <div class=\"section cc_ab49_4\">...</div>\n  (Session info: headless chrome=109.0.5414.119)\nStacktrace:\n#0 0x562e6cb1c303 <unknown>\n#1 0x562e6c8f0d37 <unknown>\n#2 0x562e6c933e29 <unknown>\n#3 0x562e6c931e2f <unknown>\n#4 0x562e6c92f9de <unknown>\n#5 0x562e6c92eb7d <unknown>\n#6 0x562e6c9229a5 <unknown>\n#7 0x562e6c94d982 <unknown>\n#8 0x562e6c92222f <unknown>\n#9 0x562e6c94db4e <unknown>\n#10 0x562e6c96588c <unknown>\n#11 0x562e6c94d753 <unknown>\n#12 0x562e6c920a14 <unknown>\n#13 0x562e6c921b7e <unknown>\n#14 0x562e6cb6b32e <unknown>\n#15 0x562e6cb6ec0e <unknown>\n#16 0x562e6cb51610 <unknown>\n#17 0x562e6cb6fc23 <unknown>\n#18 0x562e6cb43545 <unknown>\n#19 0x562e6cb906a8 <unknown>\n#20 0x562e6cb90836 <unknown>\n#21 0x562e6cbabd13 <unknown>\n#22 0x7fea71765b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/TestCapitalCom/TestCapitalCom/pages/capital_com/capital_page.py\", line 355, in tc1301_widget_new_to_trading_button_practise_for_free_click\n    button.click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 403, in _execute\n    return self._parent.execute(command, params)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"language","value":"'th'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[{"name":"worker_id","value":"'gw1'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a38671e4b108f1709e64563ed6401cf1\")>"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_language","value":"'th'"},{"name":"cur_license","value":"'ASIC'"},{"name":"prob_run_tc","value":"None"},{"name":"datetime_now","value":"'2023-02-02 22:29:48.745736'"}],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"b0869252c656ee29","name":"Screeshot","source":"b0869252c656ee29.png","type":"image/png","size":2106903},{"uid":"1b89cd84812cc21e","name":"stdout","source":"1b89cd84812cc21e.txt","type":"text/plain","size":16}],"parameters":[],"stepsCount":3,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"go::0","time":{"start":1675377832334,"stop":1675377832564,"duration":230},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"S_13.01 | Testing 'Practise for free' button on the 'Explore our platform' widget"},{"name":"feature","value":"F_13 | Testing 'New to trading?' widget"},{"name":"epic","value":"Testing capital.com. All language. All license"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"capital_page_test"},{"name":"subSuite","value":"Tests"},{"name":"host","value":"fv-az257-554"},{"name":"thread","value":"2998-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.capital_page_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_language","value":"'th'"},{"name":"cur_license","value":"'ASIC'"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"go","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"42582cc671dba573","reportUrl":"https://AlexTom22.github.io/TestCapitalCom/9//#testresult/42582cc671dba573","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/trading/signup\" class=\"button-outlined rounded js_signup __cp_b\" data-type=\"cp_ab10_1_practice\">...</a> is not clickable at point (1130, 6722). Other element would receive the click: <div class=\"section cc_ab49_4\">...</div>\n  (Session info: headless chrome=109.0.5414.74)\nStacktrace:\n#0 0x55a91fb67303 <unknown>\n#1 0x55a91f93bd37 <unknown>\n#2 0x55a91f97ee29 <unknown>\n#3 0x55a91f97ce2f <unknown>\n#4 0x55a91f97a9de <unknown>\n#5 0x55a91f979b7d <unknown>\n#6 0x55a91f96d9a5 <unknown>\n#7 0x55a91f998982 <unknown>\n#8 0x55a91f96d22f <unknown>\n#9 0x55a91f998b4e <unknown>\n#10 0x55a91f9b088c <unknown>\n#11 0x55a91f998753 <unknown>\n#12 0x55a91f96ba14 <unknown>\n#13 0x55a91f96cb7e <unknown>\n#14 0x55a91fbb632e <unknown>\n#15 0x55a91fbb9c0e <unknown>\n#16 0x55a91fb9c610 <unknown>\n#17 0x55a91fbbac23 <unknown>\n#18 0x55a91fb8e545 <unknown>\n#19 0x55a91fbdb6a8 <unknown>\n#20 0x55a91fbdb836 <unknown>\n#21 0x55a91fbf6d13 <unknown>\n#22 0x7f96b5b2fb43 <unknown>","time":{"start":1674786385235,"stop":1674786386414,"duration":1179}},{"uid":"715ef6a47dd53bda","reportUrl":"https://AlexTom22.github.io/TestCapitalCom/8//#testresult/715ef6a47dd53bda","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/trading/signup\" class=\"button-outlined rounded js_signup __cp_b\" data-type=\"cp_ab10_1_practice\">...</a> is not clickable at point (1100, 6582). Other element would receive the click: <div class=\"section cc_ab49_4\">...</div>\n  (Session info: headless chrome=109.0.5414.74)\nStacktrace:\n#0 0x564e5dc51303 <unknown>\n#1 0x564e5da25d37 <unknown>\n#2 0x564e5da68e29 <unknown>\n#3 0x564e5da66e2f <unknown>\n#4 0x564e5da649de <unknown>\n#5 0x564e5da63b7d <unknown>\n#6 0x564e5da579a5 <unknown>\n#7 0x564e5da82982 <unknown>\n#8 0x564e5da5722f <unknown>\n#9 0x564e5da82b4e <unknown>\n#10 0x564e5da9a88c <unknown>\n#11 0x564e5da82753 <unknown>\n#12 0x564e5da55a14 <unknown>\n#13 0x564e5da56b7e <unknown>\n#14 0x564e5dca032e <unknown>\n#15 0x564e5dca3c0e <unknown>\n#16 0x564e5dc86610 <unknown>\n#17 0x564e5dca4c23 <unknown>\n#18 0x564e5dc78545 <unknown>\n#19 0x564e5dcc56a8 <unknown>\n#20 0x564e5dcc5836 <unknown>\n#21 0x564e5dce0d13 <unknown>\n#22 0x7fe93815cb43 <unknown>","time":{"start":1674482055409,"stop":1674482056654,"duration":1245}}]},"tags":[]},"source":"6cdd2d2d35774432.json","parameterValues":["'th'","'ASIC'","'Empty'","'Empty'","'NoReg'","'chrome'"]}