{"uid":"e35e09ae9d542969","name":"TC_08_02 with parameters: NoReg, zh, NBRB","fullName":"tests.capital_page_test.Tests#test_08_02_widget_trading_instrument","historyId":"0eb82f31eeb0c244ed4a17bb9c4dc79f","time":{"start":1674178551998,"stop":1674178567937,"duration":15939},"description":"\n        Check: widget \"Trading instrument\"\n        Language: All. Licence: All.\n        Widgen has 2 layouts\n        ","descriptionHtml":"<pre><code>    Check: widget &quot;Trading instrument&quot;\n    Language: All. Licence: All.\n    Widgen has 2 layouts\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=109.0.5414.74)\nStacktrace:\n#0 0x5593ae63e303 <unknown>\n#1 0x5593ae412bbd <unknown>\n#2 0x5593ae45064c <unknown>\n#3 0x5593ae4449a5 <unknown>\n#4 0x5593ae46f982 <unknown>\n#5 0x5593ae44422f <unknown>\n#6 0x5593ae46fb4e <unknown>\n#7 0x5593ae48788c <unknown>\n#8 0x5593ae46f753 <unknown>\n#9 0x5593ae442a14 <unknown>\n#10 0x5593ae443b7e <unknown>\n#11 0x5593ae68d32e <unknown>\n#12 0x5593ae690c0e <unknown>\n#13 0x5593ae673610 <unknown>\n#14 0x5593ae691c23 <unknown>\n#15 0x5593ae665545 <unknown>\n#16 0x5593ae6b26a8 <unknown>\n#17 0x5593ae6b2836 <unknown>\n#18 0x5593ae6cdd13 <unknown>\n#19 0x7f212aa15b43 <unknown>","statusTrace":"self = <tests.capital_page_test.Tests object at 0x7fee3c510760>\nworker_id = 'gw0'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8c84c8f5e83d791dbd77a1085613eada\")>\ncur_login = 'Empty', cur_password = 'Empty', cur_role = 'NoReg'\ncur_language = 'zh', cur_license = 'NBRB'\n\n    @allure.feature(\"F_08 | Widget [Trading instrument]\")\n    @allure.story(\"S_08.02 | Widget [Trading instrument] tab [Commodities] button [Trade]\")\n    @allure.step(f\"{datetime.datetime.now()}.   \"\n                 f\"Start test 'Click 'Trade' buttons on the 'Commodities' tab 'Trading instrument' widget'.\")\n    @allure.title(\"TC_08_02 with parameters: {cur_role}, {cur_language}, {cur_license}\")\n    def test_08_02_widget_trading_instrument(\n        self, worker_id, d, cur_login, cur_password, cur_role, cur_language, cur_license\n    ):\n        \"\"\"\n        Check: widget \"Trading instrument\"\n        Language: All. Licence: All.\n        Widgen has 2 layouts\n        \"\"\"\n        global test_link\n        global page\n    \n        tab_name = \"Commodities\"\n        print(f\"worker_id = {worker_id}\")\n    \n        if not (cur_license == \"FCA\" and tab_name == \"Cryptocurrencies\"):\n            self.preconditions(d, cur_login, cur_password, cur_role, cur_language, cur_license)\n    \n            page = CapitalPage(d, test_link)\n            if not page.current_page_is(test_link):\n                page.open_page()\n                print(f\"{datetime.datetime.now()}   Load page: {test_link}\")\n    \n            layout = page.what_is_the_current_layout(cur_language)\n            page.widget_trading_instrument_cur_tab_click(cur_language, layout, tab_name)\n            list_buttons = page.get_list_lines_cur_tab(cur_language, layout, tab_name)\n    \n            for line in range(len(list_buttons)):\n                page = CapitalPage(d, test_link)\n>               page.selected_tab_and_line_button_trade_click(list_buttons, line)\n\ntests/capital_page_test.py:918: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/capital_com/capital_page.py:256: in selected_tab_and_line_button_trade_click\n    list_buttons[y].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fee37940520>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x5593ae6b2836 \\\\u003Cunknown>\\\\n#18 0x5593ae6cdd13 \\\\u003Cunknown>\\\\n#19 0x7f212aa15b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=109.0.5414.74)\nE       Stacktrace:\nE       #0 0x5593ae63e303 <unknown>\nE       #1 0x5593ae412bbd <unknown>\nE       #2 0x5593ae45064c <unknown>\nE       #3 0x5593ae4449a5 <unknown>\nE       #4 0x5593ae46f982 <unknown>\nE       #5 0x5593ae44422f <unknown>\nE       #6 0x5593ae46fb4e <unknown>\nE       #7 0x5593ae48788c <unknown>\nE       #8 0x5593ae46f753 <unknown>\nE       #9 0x5593ae442a14 <unknown>\nE       #10 0x5593ae443b7e <unknown>\nE       #11 0x5593ae68d32e <unknown>\nE       #12 0x5593ae690c0e <unknown>\nE       #13 0x5593ae673610 <unknown>\nE       #14 0x5593ae691c23 <unknown>\nE       #15 0x5593ae665545 <unknown>\nE       #16 0x5593ae6b26a8 <unknown>\nE       #17 0x5593ae6b2836 <unknown>\nE       #18 0x5593ae6cdd13 <unknown>\nE       #19 0x7f212aa15b43 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"worker_id","time":{"start":1674171410295,"stop":1674171410295,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1674171410295,"stop":1674171410295,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"d","time":{"start":1674171410295,"stop":1674171412292,"duration":1997},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"go","time":{"start":1674171412292,"stop":1674171412293,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_role","time":{"start":1674171412293,"stop":1674171412293,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_language","time":{"start":1674178322933,"stop":1674178322933,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cur_license","time":{"start":1674178536652,"stop":1674178536652,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        Check: widget \"Trading instrument\"\n        Language: All. Licence: All.\n        Widgen has 2 layouts\n        ","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=109.0.5414.74)\nStacktrace:\n#0 0x5593ae63e303 <unknown>\n#1 0x5593ae412bbd <unknown>\n#2 0x5593ae45064c <unknown>\n#3 0x5593ae4449a5 <unknown>\n#4 0x5593ae46f982 <unknown>\n#5 0x5593ae44422f <unknown>\n#6 0x5593ae46fb4e <unknown>\n#7 0x5593ae48788c <unknown>\n#8 0x5593ae46f753 <unknown>\n#9 0x5593ae442a14 <unknown>\n#10 0x5593ae443b7e <unknown>\n#11 0x5593ae68d32e <unknown>\n#12 0x5593ae690c0e <unknown>\n#13 0x5593ae673610 <unknown>\n#14 0x5593ae691c23 <unknown>\n#15 0x5593ae665545 <unknown>\n#16 0x5593ae6b26a8 <unknown>\n#17 0x5593ae6b2836 <unknown>\n#18 0x5593ae6cdd13 <unknown>\n#19 0x7f212aa15b43 <unknown>","statusTrace":"self = <tests.capital_page_test.Tests object at 0x7fee3c510760>\nworker_id = 'gw0'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8c84c8f5e83d791dbd77a1085613eada\")>\ncur_login = 'Empty', cur_password = 'Empty', cur_role = 'NoReg'\ncur_language = 'zh', cur_license = 'NBRB'\n\n    @allure.feature(\"F_08 | Widget [Trading instrument]\")\n    @allure.story(\"S_08.02 | Widget [Trading instrument] tab [Commodities] button [Trade]\")\n    @allure.step(f\"{datetime.datetime.now()}.   \"\n                 f\"Start test 'Click 'Trade' buttons on the 'Commodities' tab 'Trading instrument' widget'.\")\n    @allure.title(\"TC_08_02 with parameters: {cur_role}, {cur_language}, {cur_license}\")\n    def test_08_02_widget_trading_instrument(\n        self, worker_id, d, cur_login, cur_password, cur_role, cur_language, cur_license\n    ):\n        \"\"\"\n        Check: widget \"Trading instrument\"\n        Language: All. Licence: All.\n        Widgen has 2 layouts\n        \"\"\"\n        global test_link\n        global page\n    \n        tab_name = \"Commodities\"\n        print(f\"worker_id = {worker_id}\")\n    \n        if not (cur_license == \"FCA\" and tab_name == \"Cryptocurrencies\"):\n            self.preconditions(d, cur_login, cur_password, cur_role, cur_language, cur_license)\n    \n            page = CapitalPage(d, test_link)\n            if not page.current_page_is(test_link):\n                page.open_page()\n                print(f\"{datetime.datetime.now()}   Load page: {test_link}\")\n    \n            layout = page.what_is_the_current_layout(cur_language)\n            page.widget_trading_instrument_cur_tab_click(cur_language, layout, tab_name)\n            list_buttons = page.get_list_lines_cur_tab(cur_language, layout, tab_name)\n    \n            for line in range(len(list_buttons)):\n                page = CapitalPage(d, test_link)\n>               page.selected_tab_and_line_button_trade_click(list_buttons, line)\n\ntests/capital_page_test.py:918: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/capital_com/capital_page.py:256: in selected_tab_and_line_button_trade_click\n    list_buttons[y].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fee37940520>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x5593ae6b2836 \\\\u003Cunknown>\\\\n#18 0x5593ae6cdd13 \\\\u003Cunknown>\\\\n#19 0x7f212aa15b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=109.0.5414.74)\nE       Stacktrace:\nE       #0 0x5593ae63e303 <unknown>\nE       #1 0x5593ae412bbd <unknown>\nE       #2 0x5593ae45064c <unknown>\nE       #3 0x5593ae4449a5 <unknown>\nE       #4 0x5593ae46f982 <unknown>\nE       #5 0x5593ae44422f <unknown>\nE       #6 0x5593ae46fb4e <unknown>\nE       #7 0x5593ae48788c <unknown>\nE       #8 0x5593ae46f753 <unknown>\nE       #9 0x5593ae442a14 <unknown>\nE       #10 0x5593ae443b7e <unknown>\nE       #11 0x5593ae68d32e <unknown>\nE       #12 0x5593ae690c0e <unknown>\nE       #13 0x5593ae673610 <unknown>\nE       #14 0x5593ae691c23 <unknown>\nE       #15 0x5593ae665545 <unknown>\nE       #16 0x5593ae6b26a8 <unknown>\nE       #17 0x5593ae6b2836 <unknown>\nE       #18 0x5593ae6cdd13 <unknown>\nE       #19 0x7f212aa15b43 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: ElementNotInteractableException","steps":[{"name":"2023-01-19 23:36:46.904555.   Start test 'Click 'Trade' buttons on the 'Commodities' tab 'Trading instrument' widget'.","time":{"start":1674178551998,"stop":1674178567936,"duration":15938},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=109.0.5414.74)\nStacktrace:\n#0 0x5593ae63e303 <unknown>\n#1 0x5593ae412bbd <unknown>\n#2 0x5593ae45064c <unknown>\n#3 0x5593ae4449a5 <unknown>\n#4 0x5593ae46f982 <unknown>\n#5 0x5593ae44422f <unknown>\n#6 0x5593ae46fb4e <unknown>\n#7 0x5593ae48788c <unknown>\n#8 0x5593ae46f753 <unknown>\n#9 0x5593ae442a14 <unknown>\n#10 0x5593ae443b7e <unknown>\n#11 0x5593ae68d32e <unknown>\n#12 0x5593ae690c0e <unknown>\n#13 0x5593ae673610 <unknown>\n#14 0x5593ae691c23 <unknown>\n#15 0x5593ae665545 <unknown>\n#16 0x5593ae6b26a8 <unknown>\n#17 0x5593ae6b2836 <unknown>\n#18 0x5593ae6cdd13 <unknown>\n#19 0x7f212aa15b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/TestCapitalCom/TestCapitalCom/tests/capital_page_test.py\", line 918, in test_08_02_widget_trading_instrument\n    page.selected_tab_and_line_button_trade_click(list_buttons, line)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/TestCapitalCom/TestCapitalCom/pages/capital_com/capital_page.py\", line 256, in selected_tab_and_line_button_trade_click\n    list_buttons[y].click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 410, in _execute\n    return self._parent.execute(command, params)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"2023-01-19 23:36:46.903404.   Set preconditions","time":{"start":1674178551998,"stop":1674178551998,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8c84c8f5e83d791dbd77a1085613eada\")>"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_language","value":"'zh'"},{"name":"cur_license","value":"'NBRB'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"2023-01-19 23:36:46.901738.   What is the current layout Widget 'Trading instrument'?","time":{"start":1674178552014,"stop":1674178552024,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"language","value":"'zh'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"2023-01-19 23:36:46.901748.   Click tab ''Commodities'' on Widget 'Trading instrument' (layout: 2).","time":{"start":1674178552025,"stop":1674178552453,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"language","value":"'zh'"},{"name":"layout","value":"2"},{"name":"tab_name","value":"'Commodities'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"2023-01-19 23:36:46.901758.   Get list of lines with buttons in 'Commodities' tab. (Layout: 2).","time":{"start":1674178552453,"stop":1674178552545,"duration":92},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"language","value":"'zh'"},{"name":"layout","value":"2"},{"name":"tab_name","value":"'Commodities'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"2023-01-19 23:36:46.901769.   Click button 'Trade' on the '0' line selected tab.","time":{"start":1674178552546,"stop":1674178567936,"duration":15390},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=109.0.5414.74)\nStacktrace:\n#0 0x5593ae63e303 <unknown>\n#1 0x5593ae412bbd <unknown>\n#2 0x5593ae45064c <unknown>\n#3 0x5593ae4449a5 <unknown>\n#4 0x5593ae46f982 <unknown>\n#5 0x5593ae44422f <unknown>\n#6 0x5593ae46fb4e <unknown>\n#7 0x5593ae48788c <unknown>\n#8 0x5593ae46f753 <unknown>\n#9 0x5593ae442a14 <unknown>\n#10 0x5593ae443b7e <unknown>\n#11 0x5593ae68d32e <unknown>\n#12 0x5593ae690c0e <unknown>\n#13 0x5593ae673610 <unknown>\n#14 0x5593ae691c23 <unknown>\n#15 0x5593ae665545 <unknown>\n#16 0x5593ae6b26a8 <unknown>\n#17 0x5593ae6b2836 <unknown>\n#18 0x5593ae6cdd13 <unknown>\n#19 0x7f212aa15b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/TestCapitalCom/TestCapitalCom/pages/capital_com/capital_page.py\", line 256, in selected_tab_and_line_button_trade_click\n    list_buttons[y].click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 410, in _execute\n    return self._parent.execute(command, params)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-G_ZVEfM_-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"list_buttons","value":"[<selenium.webdriver.remote.webelement.WebElement (session=\"8c84c8f5e83d791dbd77a1085613eada\", element=\"dd7d0307-83cd-43fa-af54-2e084a96d964\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"8c84c8f5e83d791dbd77a1085613eada\", element=\"5c72b356-b5f2-4fac-90cd-fafe02cdd9ae\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"8c84c8f5e83d791dbd77a1085613eada\", element=\"438b63aa-fc14-4c9d-ac2b-c350b8a2c17d\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"8c84c8f5e83d791dbd77a1085613eada\", element=\"a54754bb-d26e-4079-be3e-014647fbddf1\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"8c84c8f5e83d791dbd77a1085613eada\", element=\"78dd65c8-b84b-4f13-8782-b28f1fddbc98\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"8c84c8f5e83d791dbd77a1085613eada\", element=\"c3ee7631-02b4-4640-8c21-a3159eba6d5c\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"8c84c8f5e83d791dbd77a1085613eada\", element=\"eb4442b1-a565-4ae8-883e-405b68232a1e\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"8c84c8f5e83d791dbd77a1085613eada\", element=\"a2f3d67c-2c1c-4d01-b3b3-c6cdccec016a\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"8c84c8f5e83d791dbd77a1085613eada\", element=\"4e038763-a02e-4405-b15a-f07aa9594b6c\")>, <selenium.webdriver.remote.webelement.WebElement (session=\"8c84c8f5e83d791dbd77a1085613eada\", element=\"c4c43017-67fd-48e2-aa25-365846033c63\")>]"},{"name":"y","value":"0"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[{"name":"worker_id","value":"'gw0'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8c84c8f5e83d791dbd77a1085613eada\")>"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_language","value":"'zh'"},{"name":"cur_license","value":"'NBRB'"}],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"b6289cb0e06ccc79","name":"Screeshot","source":"b6289cb0e06ccc79.png","type":"image/png","size":1882630},{"uid":"9d7139ee3d21cc00","name":"log","source":"9d7139ee3d21cc00.txt","type":"text/plain","size":724},{"uid":"e30637f11eead875","name":"stdout","source":"e30637f11eead875.txt","type":"text/plain","size":84}],"parameters":[],"stepsCount":6,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"go::0","time":{"start":1674178731504,"stop":1674178731715,"duration":211},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"S_08.02 | Widget [Trading instrument] tab [Commodities] button [Trade]"},{"name":"epic","value":"Testing capital.com. All language. All license"},{"name":"feature","value":"F_08 | Widget [Trading instrument]"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"capital_page_test"},{"name":"subSuite","value":"Tests"},{"name":"host","value":"fv-az193-539"},{"name":"thread","value":"3124-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.capital_page_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_language","value":"'zh'"},{"name":"cur_license","value":"'NBRB'"},{"name":"cur_login","value":"'Empty'"},{"name":"cur_password","value":"'Empty'"},{"name":"cur_role","value":"'NoReg'"},{"name":"go","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"f3adf396b9004184","reportUrl":"https://AlexTom22.github.io/TestCapitalCom/5//#testresult/f3adf396b9004184","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=108.0.5359.124)\nStacktrace:\n#0 0x562484daf2a3 <unknown>\n#1 0x562484b6ddfd <unknown>\n#2 0x562484bab9fc <unknown>\n#3 0x562484b9fdc5 <unknown>\n#4 0x562484bcab32 <unknown>\n#5 0x562484b9f61f <unknown>\n#6 0x562484bcacfe <unknown>\n#7 0x562484be247c <unknown>\n#8 0x562484bca903 <unknown>\n#9 0x562484b9dece <unknown>\n#10 0x562484b9efde <unknown>\n#11 0x562484dff63e <unknown>\n#12 0x562484e02b79 <unknown>\n#13 0x562484de589e <unknown>\n#14 0x562484e03a83 <unknown>\n#15 0x562484dd8505 <unknown>\n#16 0x562484e24ca8 <unknown>\n#17 0x562484e24e36 <unknown>\n#18 0x562484e40333 <unknown>\n#19 0x7fb5eca9db43 <unknown>","time":{"start":1674082813842,"stop":1674082829496,"duration":15654}},{"uid":"132c06aad7427329","reportUrl":"https://AlexTom22.github.io/TestCapitalCom/4//#testresult/132c06aad7427329","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=108.0.5359.124)\nStacktrace:\n#0 0x55d20783e2a3 <unknown>\n#1 0x55d2075fcdfd <unknown>\n#2 0x55d20763a9fc <unknown>\n#3 0x55d20762edc5 <unknown>\n#4 0x55d207659b32 <unknown>\n#5 0x55d20762e61f <unknown>\n#6 0x55d207659cfe <unknown>\n#7 0x55d20767147c <unknown>\n#8 0x55d207659903 <unknown>\n#9 0x55d20762cece <unknown>\n#10 0x55d20762dfde <unknown>\n#11 0x55d20788e63e <unknown>\n#12 0x55d207891b79 <unknown>\n#13 0x55d20787489e <unknown>\n#14 0x55d207892a83 <unknown>\n#15 0x55d207867505 <unknown>\n#16 0x55d2078b3ca8 <unknown>\n#17 0x55d2078b3e36 <unknown>\n#18 0x55d2078cf333 <unknown>\n#19 0x7f6530a9eb43 <unknown>","time":{"start":1673916498808,"stop":1673916504008,"duration":5200}},{"uid":"8be555ee22444ab6","reportUrl":"https://AlexTom22.github.io/TestCapitalCom/2//#testresult/8be555ee22444ab6","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=108.0.5359.124)\nStacktrace:\n#0 0x559ba48032a3 <unknown>\n#1 0x559ba45c1dfd <unknown>\n#2 0x559ba45ff9fc <unknown>\n#3 0x559ba45f3dc5 <unknown>\n#4 0x559ba461eb32 <unknown>\n#5 0x559ba45f361f <unknown>\n#6 0x559ba461ecfe <unknown>\n#7 0x559ba463647c <unknown>\n#8 0x559ba461e903 <unknown>\n#9 0x559ba45f1ece <unknown>\n#10 0x559ba45f2fde <unknown>\n#11 0x559ba485363e <unknown>\n#12 0x559ba4856b79 <unknown>\n#13 0x559ba483989e <unknown>\n#14 0x559ba4857a83 <unknown>\n#15 0x559ba482c505 <unknown>\n#16 0x559ba4878ca8 <unknown>\n#17 0x559ba4878e36 <unknown>\n#18 0x559ba4894333 <unknown>\n#19 0x7f33619b5b43 <unknown>","time":{"start":1673878625253,"stop":1673878630451,"duration":5198}}]},"tags":[]},"source":"e35e09ae9d542969.json","parameterValues":["'zh'","'NBRB'","'Empty'","'Empty'","'NoReg'","'chrome'"]}